Processing page 1
Processing page 2
Processing page 3
Writing to html/AAA.html
Processing page 4
Processing page 5
Writing to html/AAD.html
Processing page 6
Processing page 7
Writing to html/AAM.html
Processing page 8
Processing page 9
Writing to html/AAS.html
Processing page 10
Processing page 11
Processing page 12
Writing to html/ADC.html
Processing page 13
Processing page 14
Writing to html/ADCX.html
Processing page 15
Processing page 16
Writing to html/ADD.html
Processing page 17
Processing page 18
Processing page 19
Writing to html/ADDPD.html
Processing page 20
Processing page 21
Processing page 22
Writing to html/ADDPS.html
Processing page 23
Processing page 24
Writing to html/ADDSD.html
Processing page 25
Processing page 26
Writing to html/ADDSS.html
Processing page 27
Processing page 28
Writing to html/ADDSUBPD.html
Processing page 29
Processing page 30
Processing page 31
Writing to html/ADDSUBPS.html
Processing page 32
Processing page 33
Writing to html/ADOX.html
Processing page 34
Processing page 35
Writing to html/AESDEC.html
Processing page 36
Processing page 37
Writing to html/AESDECLAST.html
Processing page 38
Processing page 39
Writing to html/AESENC.html
Processing page 40
Processing page 41
Writing to html/AESENCLAST.html
Processing page 42
Writing to html/AESIMC.html
Processing page 43
Processing page 44
Writing to html/AESKEYGENASSIST.html
Processing page 45
Processing page 46
Writing to html/AND.html
Processing page 47
Writing to html/ANDN.html
Processing page 48
Processing page 49
Processing page 50
Writing to html/ANDPD.html
Processing page 51
Processing page 52
Processing page 53
Writing to html/ANDPS.html
Processing page 54
Processing page 55
Processing page 56
Writing to html/ANDNPD.html
Processing page 57
Processing page 58
Processing page 59
Writing to html/ANDNPS.html
Processing page 60
Processing page 61
Writing to html/ARPL.html
Processing page 62
Processing page 63
Writing to html/BLENDPD.html
Processing page 64
Writing to html/BEXTR.html
Processing page 65
Processing page 66
Writing to html/BLENDPS.html
Processing page 67
Processing page 68
Writing to html/BLENDVPD.html
Processing page 69
Processing page 70
Processing page 71
Writing to html/BLENDVPS.html
Processing page 72
Writing to html/BLSI.html
Processing page 73
Writing to html/BLSMSK.html
Processing page 74
Writing to html/BLSR.html
Processing page 75
Processing page 76
Writing to html/BNDCL.html
Processing page 77
Processing page 78
Writing to html/BNDCU_BNDCN.html
Processing page 79
Processing page 80
Processing page 81
Writing to html/BNDLDX.html
Processing page 82
Processing page 83
Writing to html/BNDMK.html
Processing page 84
Processing page 85
Processing page 86
Writing to html/BNDMOV.html
Processing page 87
Processing page 88
Processing page 89
Writing to html/BNDSTX.html
Processing page 90
Processing page 91
Writing to html/BOUND.html
Processing page 92
Processing page 93
Writing to html/BSF.html
Processing page 94
Processing page 95
Writing to html/BSR.html
Processing page 96
Writing to html/BSWAP.html
Processing page 97
Processing page 98
Writing to html/BT.html
Processing page 99
Processing page 100
Writing to html/BTC.html
Processing page 101
Processing page 102
Writing to html/BTR.html
Processing page 103
Processing page 104
Writing to html/BTS.html
Processing page 105
Processing page 106
Writing to html/BZHI.html
Processing page 107
Processing page 108
Processing page 109
Processing page 110
Processing page 111
Processing page 112
Processing page 113
Processing page 114
Processing page 115
Processing page 116
Processing page 117
Processing page 118
Processing page 119
Writing to html/CALL.html
Processing page 120
Writing to html/CBW_CWDE_CDQE.html
Processing page 121
Writing to html/CLAC.html
Processing page 122
Writing to html/CLC.html
Processing page 123
Writing to html/CLD.html
Processing page 124
Processing page 125
Writing to html/CLFLUSH.html
Processing page 126
Processing page 127
Writing to html/CLFLUSHOPT.html
Processing page 128
Processing page 129
Writing to html/CLI.html
Processing page 130
Writing to html/CLTS.html
Processing page 131
Writing to html/CMC.html
Processing page 132
Processing page 133
Processing page 134
Processing page 135
Writing to html/CMOVcc.html
Processing page 136
Processing page 137
Writing to html/CMP.html
Processing page 138
Processing page 139
Processing page 140
Processing page 141
Processing page 142
Processing page 143
Processing page 144
Writing to html/CMPPD.html
Processing page 145
Processing page 146
Processing page 147
Processing page 148
Processing page 149
Processing page 150
Processing page 151
Writing to html/CMPPS.html
Processing page 152
Processing page 153
Processing page 154
Processing page 155
Writing to html/CMPS_CMPSB_CMPSW_CMPSD_CMPSQ.html
Processing page 156
Processing page 157
Processing page 158
Processing page 159
Writing to html/CMPSD.html
Processing page 160
Processing page 161
Processing page 162
Processing page 163
Writing to html/CMPSS.html
Processing page 164
Processing page 165
Writing to html/CMPXCHG.html
Processing page 166
Processing page 167
Processing page 168
Writing to html/CMPXCHG8B_CMPXCHG16B.html
Processing page 169
Processing page 170
Writing to html/COMISD.html
No matching column!
[45.12]
[<RectH(45.12,133284.68,272.17,133296.87) text=u'VEX-encoded instructions, see Exceptions Type 3; '>, <RectH(45.12,133298.72,290.14,133310.91) text=u'EVEX-encoded instructions, see Exceptions Type E3NF. '>, <RectH(45.12,133312.70,65.97,133324.89) text=u'#UD '>, <RectH(137.22,133312.70,347.30,133324.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 171
Processing page 172
Writing to html/COMISS.html
No matching column!
[45.12]
[<RectH(45.12,134868.68,272.17,134880.87) text=u'VEX-encoded instructions, see Exceptions Type 3; '>, <RectH(45.12,134883.68,290.14,134895.87) text=u'EVEX-encoded instructions, see Exceptions Type E3NF. '>, <RectH(45.12,134897.72,65.97,134909.91) text=u'#UD '>, <RectH(137.22,134897.72,347.30,134909.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 173
Processing page 174
Processing page 175
Processing page 176
Processing page 177
Processing page 178
Processing page 179
Processing page 180
Processing page 181
Processing page 182
Processing page 183
Processing page 184
Processing page 185
Processing page 186
Processing page 187
Processing page 188
Processing page 189
Processing page 190
Processing page 191
Processing page 192
Processing page 193
Processing page 194
Processing page 195
Processing page 196
Processing page 197
Processing page 198
Processing page 199
Processing page 200
Processing page 201
Processing page 202
Processing page 203
Processing page 204
Processing page 205
Processing page 206
Processing page 207
Writing to html/CPUID.html
Processing page 208
Processing page 209
Processing page 210
Writing to html/CRC32.html
Processing page 211
Processing page 212
Processing page 213
Processing page 214
Writing to html/CVTDQ2PD.html
No matching column!
[45.12]
[<RectH(45.12,167984.72,272.17,167996.91) text=u'VEX-encoded instructions, see Exceptions Type 5; '>, <RectH(45.12,167999.72,279.58,168011.91) text=u'EVEX-encoded instructions, see Exceptions Type E5. '>, <RectH(45.12,168013.70,65.97,168025.89) text=u'#UD '>, <RectH(137.22,168013.70,347.30,168025.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 215
Processing page 216
Processing page 217
Writing to html/CVTDQ2PS.html
No matching column!
[46.02]
[<RectH(46.02,170867.72,273.10,170879.91) text=u'VEX-encoded instructions, see Exceptions Type 2; '>, <RectH(46.02,170882.72,280.54,170894.91) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(46.02,170896.70,66.89,170908.89) text=u'#UD '>, <RectH(138.14,170896.70,348.11,170908.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 218
Processing page 219
Processing page 220
Processing page 221
Writing to html/CVTPD2DQ.html
No matching column!
[46.02]
[<RectH(46.02,173751.74,280.54,173763.93) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(46.02,173765.72,66.89,173777.91) text=u'#UD '>, <RectH(138.14,173765.72,348.11,173777.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 222
Writing to html/CVTPD2PI.html
Processing page 223
Processing page 224
Processing page 225
Processing page 226
Writing to html/CVTPD2PS.html
No matching column!
[45.12]
[<RectH(45.12,177696.74,272.17,177708.93) text=u'VEX-encoded instructions, see Exceptions Type 2; '>, <RectH(45.12,177711.74,279.58,177723.93) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(45.12,177725.72,65.97,177737.91) text=u'#UD '>, <RectH(137.22,177725.72,347.30,177737.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 227
Writing to html/CVTPI2PD.html
Processing page 228
Writing to html/CVTPI2PS.html
Processing page 229
Processing page 230
Processing page 231
Writing to html/CVTPS2DQ.html
No matching column!
[46.02]
[<RectH(46.02,181943.72,273.10,181955.91) text=u'VEX-encoded instructions, see Exceptions Type 2; '>, <RectH(46.02,181958.72,280.54,181970.91) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(46.02,181972.70,66.89,181984.89) text=u'#UD '>, <RectH(138.14,181972.70,348.11,181984.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 232
Processing page 233
Processing page 234
Writing to html/CVTPS2PD.html
No matching column!
[45.12]
[<RectH(45.12,184343.72,272.17,184355.91) text=u'VEX-encoded instructions, see Exceptions Type 3; '>, <RectH(45.12,184358.72,279.58,184370.91) text=u'EVEX-encoded instructions, see Exceptions Type E3. '>, <RectH(45.12,184372.70,65.97,184384.89) text=u'#UD '>, <RectH(137.22,184372.70,347.30,184384.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 235
Writing to html/CVTPS2PI.html
Processing page 236
Processing page 237
Writing to html/CVTSD2SI.html
No matching column!
[46.02]
[<RectH(46.02,186590.72,273.10,186602.91) text=u'VEX-encoded instructions, see Exceptions Type 3; '>, <RectH(46.02,186605.72,291.07,186617.91) text=u'EVEX-encoded instructions, see Exceptions Type E3NF. '>, <RectH(46.02,186619.70,66.89,186631.89) text=u'#UD '>, <RectH(138.14,186619.70,348.11,186631.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 238
Processing page 239
Writing to html/CVTSD2SS.html
Processing page 240
Processing page 241
Writing to html/CVTSI2SD.html
Processing page 242
Processing page 243
Writing to html/CVTSI2SS.html
Processing page 244
Processing page 245
Writing to html/CVTSS2SD.html
Processing page 246
Processing page 247
Writing to html/CVTSS2SI.html
No matching column!
[46.02]
[<RectH(46.02,194510.72,324.66,194522.91) text=u'VEX-encoded instructions, see Exceptions Type 3; additionally '>, <RectH(46.02,194524.70,66.89,194536.89) text=u'#UD '>, <RectH(138.14,194524.70,239.33,194536.89) text=u'If VEX.vvvv != 1111B. '>, <RectH(46.02,194538.74,291.07,194550.93) text=u'EVEX-encoded instructions, see Exceptions Type E3NF. '>]
Processing page 248
Processing page 249
Processing page 250
Processing page 251
Writing to html/CVTTPD2DQ.html
No matching column!
[46.02]
[<RectH(46.02,197496.74,273.10,197508.93) text=u'VEX-encoded instructions, see Exceptions Type 2; '>, <RectH(46.02,197510.72,280.54,197522.91) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(46.02,197524.70,66.89,197536.89) text=u'#UD '>, <RectH(138.14,197524.70,348.11,197536.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 252
Writing to html/CVTTPD2PI.html
Processing page 253
Processing page 254
Processing page 255
Writing to html/CVTTPS2DQ.html
No matching column!
[46.02]
[<RectH(46.02,200831.72,324.66,200843.91) text=u'VEX-encoded instructions, see Exceptions Type 2; additionally '>, <RectH(46.02,200845.70,280.54,200857.89) text=u'EVEX-encoded instructions, see Exceptions Type E2. '>, <RectH(46.02,200859.74,66.89,200871.93) text=u'#UD '>, <RectH(138.14,200859.74,348.11,200871.93) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 256
Writing to html/CVTTPS2PI.html
Processing page 257
Processing page 258
Writing to html/CVTTSD2SI.html
No matching column!
[45.12]
[<RectH(45.12,203112.74,323.74,203124.93) text=u'VEX-encoded instructions, see Exceptions Type 3; additionally '>, <RectH(45.12,203126.72,65.99,203138.91) text=u'#UD '>, <RectH(137.23,203126.72,238.43,203138.91) text=u'If VEX.vvvv != 1111B. '>, <RectH(45.12,203140.70,290.19,203152.89) text=u'EVEX-encoded instructions, see Exceptions Type E3NF. '>]
Processing page 259
Processing page 260
Writing to html/CVTTSS2SI.html
Processing page 261
Writing to html/CWD_CDQ_CQO.html
Processing page 262
Processing page 263
Writing to html/DAA.html
Processing page 264
Processing page 265
Writing to html/DAS.html
Processing page 266
Processing page 267
Writing to html/DEC.html
Processing page 268
Processing page 269
Processing page 270
Writing to html/DIV.html
Processing page 271
Processing page 272
Processing page 273
Writing to html/DIVPD.html
Processing page 274
Processing page 275
Processing page 276
Writing to html/DIVPS.html
Processing page 277
Processing page 278
Writing to html/DIVSD.html
Processing page 279
Processing page 280
Writing to html/DIVSS.html
Processing page 281
Processing page 282
Writing to html/DPPD.html
Processing page 283
Processing page 284
Processing page 285
Writing to html/DPPS.html
Processing page 286
Writing to html/EMMS.html
Processing page 287
Processing page 288
Processing page 289
Writing to html/ENTER.html
Processing page 290
Processing page 291
Writing to html/EXTRACTPS.html
No matching column!
[46.02]
[<RectH(46.02,229151.72,325.41,229163.91) text=u'VEX-encoded instructions, see Exceptions Type 5; Additionally '>, <RectH(46.02,229165.70,291.07,229177.89) text=u'EVEX-encoded instructions, see Exceptions Type E9NF. '>, <RectH(46.02,229179.74,70.02,229191.93) text=u'#UD '>, <RectH(138.14,229179.74,198.22,229191.93) text=u'IF VEX.L = 0. '>, <RectH(46.02,229193.72,66.89,229205.91) text=u'#UD '>, <RectH(138.14,229193.72,348.11,229205.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
No matching column!
[46.02]
[<RectH(46.02,229151.72,325.41,229163.91) text=u'VEX-encoded instructions, see Exceptions Type 5; Additionally '>, <RectH(46.02,229165.70,291.07,229177.89) text=u'EVEX-encoded instructions, see Exceptions Type E9NF. '>, <RectH(46.02,229179.74,70.02,229191.93) text=u'#UD '>, <RectH(138.14,229179.74,198.22,229191.93) text=u'IF VEX.L = 0. '>, <RectH(46.02,229193.72,66.89,229205.91) text=u'#UD '>, <RectH(138.14,229193.72,348.11,229205.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 292
Processing page 293
Writing to html/F2XM1.html
Processing page 294
Writing to html/FABS.html
Processing page 295
Processing page 296
Processing page 297
Writing to html/FADD_FADDP_FIADD.html
Processing page 298
Processing page 299
Writing to html/FBLD.html
Processing page 300
Processing page 301
Writing to html/FBSTP.html
Processing page 302
Processing page 303
Writing to html/FCHS.html
Processing page 304
Processing page 305
Writing to html/FCLEX_FNCLEX.html
Processing page 306
Processing page 307
Writing to html/FCMOVcc.html
Processing page 308
Processing page 309
Processing page 310
Writing to html/FCOM_FCOMP_FCOMPP.html
Processing page 311
Processing page 312
Processing page 313
Writing to html/FCOMI_FCOMIP_ FUCOMI_FUCOMIP.html
Processing page 314
Processing page 315
Writing to html/FCOS.html
Processing page 316
Writing to html/FDECSTP.html
Processing page 317
Processing page 318
Processing page 319
Writing to html/FDIV_FDIVP_FIDIV.html
Processing page 320
Processing page 321
Processing page 322
Writing to html/FDIVR_FDIVRP_FIDIVR.html
Processing page 323
Writing to html/FFREE.html
Processing page 324
Processing page 325
Writing to html/FICOM_FICOMP.html
Processing page 326
Processing page 327
Writing to html/FILD.html
Processing page 328
Writing to html/FINCSTP.html
Processing page 329
Processing page 330
Writing to html/FINIT_FNINIT.html
Processing page 331
Processing page 332
Processing page 333
Writing to html/FIST_FISTP.html
Processing page 334
Processing page 335
Writing to html/FISTTP.html
Processing page 336
Processing page 337
Writing to html/FLD.html
Processing page 338
Processing page 339
Writing to html/FLD1_FLDL2T_FLDL2E_FLDPI_FLDLG2_FLDLN2_FLDZ.html
Processing page 340
Processing page 341
Writing to html/FLDCW.html
Processing page 342
Processing page 343
Writing to html/FLDENV.html
Processing page 344
Processing page 345
Processing page 346
Writing to html/FMUL_FMULP_FIMUL.html
Processing page 347
Writing to html/FNOP.html
Processing page 348
Processing page 349
Writing to html/FPATAN.html
Processing page 350
Processing page 351
Writing to html/FPREM.html
Processing page 352
Processing page 353
Writing to html/FPREM1.html
Processing page 354
Processing page 355
Writing to html/FPTAN.html
Processing page 356
Writing to html/FRNDINT.html
Processing page 357
Processing page 358
Writing to html/FRSTOR.html
Processing page 359
Processing page 360
Processing page 361
Writing to html/FSAVE_FNSAVE.html
Processing page 362
Processing page 363
Writing to html/FSCALE.html
Processing page 364
Processing page 365
Writing to html/FSIN.html
Processing page 366
Processing page 367
Writing to html/FSINCOS.html
Processing page 368
Processing page 369
Writing to html/FSQRT.html
Processing page 370
Processing page 371
Writing to html/FST_FSTP.html
Processing page 372
Processing page 373
Writing to html/FSTCW_FNSTCW.html
Processing page 374
Processing page 375
Writing to html/FSTENV_FNSTENV.html
Processing page 376
Processing page 377
Writing to html/FSTSW_FNSTSW.html
Processing page 378
Processing page 379
Processing page 380
Writing to html/FSUB_FSUBP_FISUB.html
Processing page 381
Processing page 382
Processing page 383
Writing to html/FSUBR_FSUBRP_FISUBR.html
Processing page 384
Processing page 385
Writing to html/FTST.html
Processing page 386
Processing page 387
Processing page 388
Writing to html/FUCOM_FUCOMP_FUCOMPP.html
Processing page 389
Processing page 390
Writing to html/FXAM.html
Processing page 391
Processing page 392
Writing to html/FXCH.html
Processing page 393
Processing page 394
Processing page 395
Writing to html/FXRSTOR.html
Processing page 396
Processing page 397
Processing page 398
Processing page 399
Processing page 400
Processing page 401
Processing page 402
Processing page 403
Writing to html/FXSAVE.html
Processing page 404
Processing page 405
Writing to html/FXTRACT.html
Processing page 406
Processing page 407
Writing to html/FYL2X.html
Processing page 408
Processing page 409
Writing to html/FYL2XP1.html
Processing page 410
Processing page 411
Processing page 412
Writing to html/HADDPD.html
Processing page 413
Processing page 414
Processing page 415
Writing to html/HADDPS.html
Processing page 416
Writing to html/HLT.html
Processing page 417
Processing page 418
Processing page 419
Writing to html/HSUBPD.html
Processing page 420
Processing page 421
Processing page 422
Writing to html/HSUBPS.html
Processing page 423
Processing page 424
Processing page 425
Writing to html/IDIV.html
Processing page 426
Processing page 427
Processing page 428
Processing page 429
Writing to html/IMUL.html
Processing page 430
Processing page 431
Writing to html/IN.html
Processing page 432
Processing page 433
Writing to html/INC.html
Processing page 434
Processing page 435
Processing page 436
Writing to html/INS_INSB_INSW_INSD.html
Processing page 437
Processing page 438
Processing page 439
Writing to html/INSERTPS.html
Processing page 440
Processing page 441
Processing page 442
Processing page 443
Processing page 444
Processing page 445
Processing page 446
Processing page 447
Processing page 448
Processing page 449
Processing page 450
Processing page 451
Writing to html/INT n_INTO_INT 3.html
Processing page 452
Processing page 453
Writing to html/INVD.html
Processing page 454
Processing page 455
Writing to html/INVLPG.html
Processing page 456
Processing page 457
Processing page 458
Writing to html/INVPCID.html
Processing page 459
Processing page 460
Processing page 461
Processing page 462
Processing page 463
Processing page 464
Processing page 465
Writing to html/IRET_IRETD.html
Processing page 466
Processing page 467
Processing page 468
Processing page 469
Processing page 470
Writing to html/Jcc.html
Processing page 471
Processing page 472
Processing page 473
Processing page 474
Processing page 475
Processing page 476
Processing page 477
Processing page 478
Writing to html/JMP.html
Processing page 479
Writing to html/KADDW_KADDB_KADDQ_KADDD.html
Processing page 480
Writing to html/KANDW_KANDB_KANDQ_KANDD.html
Processing page 481
Writing to html/KANDNW_KANDNB_KANDNQ_KANDND.html
Processing page 482
Processing page 483
Writing to html/KMOVW_KMOVB_KMOVQ_KMOVD.html
Processing page 484
Writing to html/KNOTW_KNOTB_KNOTQ_KNOTD.html
Processing page 485
Writing to html/KORW_KORB_KORQ_KORD.html
Processing page 486
Processing page 487
Writing to html/KORTESTW_KORTESTB_KORTESTQ_KORTESTD.html
Processing page 488
Processing page 489
Writing to html/KSHIFTLW_KSHIFTLB_KSHIFTLQ_KSHIFTLD.html
Processing page 490
Processing page 491
Writing to html/KSHIFTRW_KSHIFTRB_KSHIFTRQ_KSHIFTRD.html
Processing page 492
Processing page 493
Writing to html/KTESTW_KTESTB_KTESTQ_KTESTD.html
Processing page 494
Writing to html/KUNPCKBW_KUNPCKWD_KUNPCKDQ.html
Processing page 495
Writing to html/KXNORW_KXNORB_KXNORQ_KXNORD.html
Processing page 496
Writing to html/KXORW_KXORB_KXORQ_KXORD.html
Processing page 497
Writing to html/LAHF.html
Processing page 498
Processing page 499
Processing page 500
Writing to html/LAR.html
Processing page 501
Processing page 502
Writing to html/LDDQU.html
Processing page 503
Writing to html/LDMXCSR.html
Processing page 504
Processing page 505
Processing page 506
Processing page 507
Writing to html/LDS_LES_LFS_LGS_LSS.html
Processing page 508
Processing page 509
Writing to html/LEA.html
Processing page 510
Processing page 511
Writing to html/LEAVE.html
Processing page 512
Writing to html/LFENCE.html
Processing page 513
Processing page 514
Processing page 515
Writing to html/LGDT_LIDT.html
Processing page 516
Processing page 517
Writing to html/LLDT.html
Processing page 518
Processing page 519
Writing to html/LMSW.html
Processing page 520
Processing page 521
Writing to html/LOCK.html
Processing page 522
Processing page 523
Processing page 524
Writing to html/LODS_LODSB_LODSW_LODSD_LODSQ.html
Processing page 525
Processing page 526
Writing to html/LOOP_LOOPcc.html
Processing page 527
Processing page 528
Processing page 529
Writing to html/LSL.html
Processing page 530
Processing page 531
Writing to html/LTR.html
Processing page 532
Processing page 533
Processing page 534
Writing to html/LZCNT.html
Processing page 535
Processing page 536
Processing page 537
Can't decode title
15.96 [<RectH(475.92,423784.71,557.92,423804.10) text=u'CHAPTER 4 '>, <RectH(304.80,423800.73,557.98,423820.12) text=u'INSTRUCTION SET REFERENCE, M-U '>, <RectH(45.24,423851.37,69.31,423868.35) text=u'4.1 '>, <RectH(97.50,423851.37,516.85,423885.39) text=u'IMM8 CONTROL BYTE OPERATION FOR PCMPESTRI / PCMPESTRM /PCMPISTRI / PCMPISTRM '>, <RectH(45.24,423889.70,557.51,423923.91) text=u'The notations introduced in this section are referenced in the reference pages of PCMPESTRI, PCMPESTRM, PCMP-ISTRI, PCMPISTRM. The operation of the immediate control byte is common to these four string text processing instructions of SSE4.2. This section describes the common operations. '>]
[u'CHAPTER 4']
Processing page 538
Processing page 539
Can't decode title
12 [<RectH(45.12,424578.02,76.02,424592.60) text=u'4.1.2 '>, <RectH(98.76,424578.02,204.97,424592.60) text=u'Source Data Format '>, <RectH(232.44,424596.74,370.46,424608.84) text=u'Table 4-1.  Source Data Format '>, <pdftable.Table object at 0x7f9666e54150>, <RectH(45.12,424725.68,553.93,424759.89) text=u'If the Imm8 Control Byte has bit[0] cleared, each source contains 16 packed bytes.  If the bit is set each source contains 8 packed words. If the Imm8 Control Byte has bit[1] cleared, each input contains unsigned data.  If the bit is set each source contains signed data. '>]
[u'4.1.2']
Processing page 540
Can't decode title
12 [<RectH(45.12,426162.02,76.01,426176.60) text=u'4.1.5 '>, <RectH(98.75,426162.02,189.75,426176.60) text=u'Output Selection '>, <RectH(239.04,426187.88,364.32,426199.98) text=u'Table 4-5.  Output Selection '>, <pdftable.Table object at 0x7f9666945550>, <RectH(45.12,426259.88,558.69,426283.05) text=u'For PCMPESTRI/PCMPISTRI, the Imm8 Control Byte bit[6] is used to determine if the index is of the least significant or most significant bit of IntRes2. '>]
[u'4.1.5']
Processing page 541
Can't decode title
12 [<RectH(46.02,426954.02,76.93,426968.60) text=u'4.1.7 '>, <RectH(99.67,426954.02,257.52,426968.60) text=u'Summary of Im8 Control byte '>, <RectH(204.18,426978.74,396.86,426990.84) text=u'Table 4-8.  Summary of Imm8 Control Byte '>, <pdftable.Table object at 0x7f966762a750>]
[u'4.1.7']
Processing page 542
Processing page 543
Can't decode title
12 [<RectH(45.12,427746.02,76.03,427760.60) text=u'4.1.8 '>, <RectH(98.76,427746.02,346.29,427760.60) text=u'Diagram Comparison and Aggregation Process '>, <RectH(183.06,428095.94,419.96,428108.04) text=u'Figure 4-1.  Operation of PCMPSTRx and PCMPESTRx '>, <RectH(45.12,428134.59,69.20,428151.57) text=u'4.2 '>, <RectH(97.38,428134.59,550.79,428168.55) text=u'COMMON TRANSFORMATION AND PRIMITIVE FUNCTIONS FOR SHA1XXX AND SHA256XXX '>]
[u'4.1.8']
Processing page 544
Processing page 545
Writing to html/MASKMOVDQU.html
Processing page 546
Processing page 547
Writing to html/MASKMOVQ.html
Processing page 548
Processing page 549
Processing page 550
Writing to html/MAXPD.html
Processing page 551
Processing page 552
Processing page 553
Writing to html/MAXPS.html
Processing page 554
Processing page 555
Writing to html/MAXSD.html
Processing page 556
Processing page 557
Writing to html/MAXSS.html
Processing page 558
Writing to html/MFENCE.html
Processing page 559
Processing page 560
Processing page 561
Writing to html/MINPD.html
Processing page 562
Processing page 563
Processing page 564
Writing to html/MINPS.html
Processing page 565
Processing page 566
Writing to html/MINSD.html
Processing page 567
Processing page 568
Writing to html/MINSS.html
Processing page 569
Processing page 570
Writing to html/MONITOR.html
Processing page 571
Processing page 572
Processing page 573
Processing page 574
Processing page 575
Writing to html/MOV.html
Processing page 576
Processing page 577
Processing page 578
Writing to html/MOV.html
Processing page 579
Processing page 580
Writing to html/MOV.html
Processing page 581
Processing page 582
Processing page 583
Processing page 584
Writing to html/MOVAPD.html
Processing page 585
Processing page 586
Processing page 587
Processing page 588
Writing to html/MOVAPS.html
Processing page 589
Processing page 590
Writing to html/MOVBE.html
Processing page 591
Processing page 592
Processing page 593
Processing page 594
Writing to html/MOVD_MOVQ.html
No matching column!
[45.12]
[<RectH(45.12,468958.70,285.47,468970.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(45.12,468972.68,69.16,468984.87) text=u'#UD '>, <RectH(137.22,468972.68,195.40,468984.87) text=u'If VEX.L = 1. '>, <RectH(137.22,468986.72,347.28,468998.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
No matching column!
[45.12]
[<RectH(45.12,468958.70,285.47,468970.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(45.12,468972.68,69.16,468984.87) text=u'#UD '>, <RectH(137.22,468972.68,195.40,468984.87) text=u'If VEX.L = 1. '>, <RectH(137.22,468986.72,347.28,468998.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 595
Processing page 596
Processing page 597
Writing to html/MOVDDUP.html
No matching column!
[46.02]
[<RectH(46.02,471565.70,286.39,471577.89) text=u'EVEX-encoded instruction, see Exceptions Type E5NF. '>, <RectH(46.02,471579.74,66.90,471591.93) text=u'#UD '>, <RectH(138.15,471579.74,348.11,471591.93) text=u'If EVEX.vvvv != 1111B or VEX.vvvv != 1111B. '>]
Processing page 598
Processing page 599
Processing page 600
Processing page 601
Processing page 602
Writing to html/MOVDQA,VMOVDQA32_64.html
Processing page 603
Processing page 604
Processing page 605
Processing page 606
Processing page 607
Processing page 608
Processing page 609
Processing page 610
Writing to html/MOVDQU,VMOVDQU8_16_32_64.html
Processing page 611
Writing to html/MOVDQ2Q.html
Processing page 612
Processing page 613
Writing to html/MOVHLPS.html
Processing page 614
Processing page 615
Writing to html/MOVHPD.html
Processing page 616
Processing page 617
Writing to html/MOVHPS.html
Processing page 618
Processing page 619
Writing to html/MOVLHPS.html
Processing page 620
Processing page 621
Writing to html/MOVLPD.html
Processing page 622
Processing page 623
Writing to html/MOVLPS.html
Processing page 624
Processing page 625
Writing to html/MOVMSKPD.html
Processing page 626
Processing page 627
Writing to html/MOVMSKPS.html
Processing page 628
Processing page 629
Writing to html/MOVNTDQA.html
Processing page 630
Processing page 631
Writing to html/MOVNTDQ.html
Processing page 632
Processing page 633
Writing to html/MOVNTI.html
Processing page 634
Processing page 635
Writing to html/MOVNTPD.html
Processing page 636
Processing page 637
Writing to html/MOVNTPS.html
Processing page 638
Writing to html/MOVNTQ.html
Processing page 639
Processing page 640
Processing page 641
Writing to html/MOVQ.html
Processing page 642
Writing to html/MOVQ2DQ.html
Processing page 643
Processing page 644
Processing page 645
Processing page 646
Writing to html/MOVS_MOVSB_MOVSW_MOVSD_MOVSQ.html
Processing page 647
Processing page 648
Processing page 649
Writing to html/MOVSD.html
Processing page 650
Processing page 651
Processing page 652
Writing to html/MOVSHDUP.html
No matching column!
[45.1191]
[<RectH(45.12,515149.70,299.94,515161.89) text=u'EVEX-encoded instruction, see Exceptions Type E4NF.nb. '>, <RectH(45.12,515163.74,66.00,515175.93) text=u'#UD '>, <RectH(137.25,515163.74,347.31,515175.93) text=u'If EVEX.vvvv != 1111B or VEX.vvvv != 1111B. '>]
Processing page 653
Processing page 654
Processing page 655
Writing to html/MOVSLDUP.html
No matching column!
[46.02]
[<RectH(46.02,517525.70,300.86,517537.89) text=u'EVEX-encoded instruction, see Exceptions Type E4NF.nb. '>, <RectH(46.02,517539.74,66.90,517551.93) text=u'#UD '>, <RectH(138.15,517539.74,348.11,517551.93) text=u'If EVEX.vvvv != 1111B or VEX.vvvv != 1111B. '>]
Processing page 656
Processing page 657
Processing page 658
Processing page 659
Writing to html/MOVSS.html
Processing page 660
Processing page 661
Writing to html/MOVSX_MOVSXD.html
Processing page 662
Processing page 663
Processing page 664
Processing page 665
Writing to html/MOVUPD.html
Processing page 666
Processing page 667
Processing page 668
Processing page 669
Writing to html/MOVUPS.html
Processing page 670
Processing page 671
Writing to html/MOVZX.html
Processing page 672
Processing page 673
Processing page 674
Processing page 675
Processing page 676
Processing page 677
Processing page 678
Processing page 679
Writing to html/MPSADBW.html
Processing page 680
Processing page 681
Writing to html/MUL.html
Processing page 682
Processing page 683
Processing page 684
Writing to html/MULPD.html
Processing page 685
Processing page 686
Processing page 687
Writing to html/MULPS.html
Processing page 688
Processing page 689
Writing to html/MULSD.html
Processing page 690
Processing page 691
Writing to html/MULSS.html
Processing page 692
Processing page 693
Writing to html/MULX.html
Processing page 694
Processing page 695
Processing page 696
Writing to html/MWAIT.html
Processing page 697
Processing page 698
Writing to html/NEG.html
Processing page 699
Writing to html/NOP.html
Processing page 700
Processing page 701
Writing to html/NOT.html
Processing page 702
Processing page 703
Writing to html/OR.html
Processing page 704
Processing page 705
Processing page 706
Writing to html/ORPD.html
Processing page 707
Processing page 708
Processing page 709
Writing to html/ORPS.html
Processing page 710
Processing page 711
Writing to html/OUT.html
Processing page 712
Processing page 713
Processing page 714
Processing page 715
Writing to html/OUTS_OUTSB_OUTSW_OUTSD.html
Processing page 716
Processing page 717
Processing page 718
Processing page 719
Processing page 720
Processing page 721
Writing to html/PABSB_PABSW_PABSD_PABSQ.html
Processing page 722
Processing page 723
Processing page 724
Processing page 725
Processing page 726
Processing page 727
Processing page 728
Processing page 729
Writing to html/PACKSSWB_PACKSSDW.html
Processing page 730
Processing page 731
Processing page 732
Processing page 733
Processing page 734
Writing to html/PACKUSDW.html
Processing page 735
Processing page 736
Processing page 737
Processing page 738
Processing page 739
Writing to html/PACKUSWB.html
Processing page 740
Processing page 741
Processing page 742
Processing page 743
Processing page 744
Processing page 745
Processing page 746
Writing to html/PADDB_PADDW_PADDD_PADDQ.html
Processing page 747
Processing page 748
Processing page 749
Processing page 750
Writing to html/PADDSB_PADDSW.html
Processing page 751
Processing page 752
Processing page 753
Processing page 754
Writing to html/PADDUSB_PADDUSW.html
Processing page 755
Processing page 756
Processing page 757
Processing page 758
Writing to html/PALIGNR.html
Processing page 759
Processing page 760
Processing page 761
Writing to html/PAND.html
Processing page 762
Processing page 763
Processing page 764
Writing to html/PANDN.html
Processing page 765
Writing to html/PAUSE.html
Processing page 766
Processing page 767
Processing page 768
Processing page 769
Writing to html/PAVGB_PAVGW.html
Processing page 770
Processing page 771
Processing page 772
Processing page 773
Writing to html/PBLENDVB.html
Processing page 774
Processing page 775
Processing page 776
Writing to html/PBLENDW.html
Processing page 777
Processing page 778
Processing page 779
Writing to html/PCLMULQDQ.html
Processing page 780
Processing page 781
Processing page 782
Processing page 783
Processing page 784
Processing page 785
Writing to html/PCMPEQB_PCMPEQW_PCMPEQD.html
Processing page 786
Processing page 787
Processing page 788
Writing to html/PCMPEQQ.html
Processing page 789
Processing page 790
Writing to html/PCMPESTRI.html
Processing page 791
Processing page 792
Writing to html/PCMPESTRM.html
Processing page 793
Processing page 794
Processing page 795
Processing page 796
Processing page 797
Processing page 798
Writing to html/PCMPGTB_PCMPGTW_PCMPGTD.html
Processing page 799
Processing page 800
Processing page 801
Writing to html/PCMPGTQ.html
Processing page 802
Processing page 803
Writing to html/PCMPISTRI.html
Processing page 804
Processing page 805
Writing to html/PCMPISTRM.html
Processing page 806
Processing page 807
Writing to html/PDEP.html
Processing page 808
Processing page 809
Writing to html/PEXT.html
Processing page 810
Processing page 811
Processing page 812
Writing to html/PEXTRB_PEXTRD_PEXTRQ.html
No matching column!
[45.12]
[<RectH(45.12,641772.74,285.47,641784.93) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(45.12,641786.72,65.97,641798.91) text=u'#UD '>, <RectH(137.22,641786.72,267.87,641798.91) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(137.22,641800.70,347.28,641812.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>, <RectH(137.22,641814.74,331.73,641826.93) text=u'If VPEXTRQ in non-64-bit mode, VEX.W=1. '>]
No matching column!
[45.12]
[<RectH(45.12,641772.74,285.47,641784.93) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(45.12,641786.72,65.97,641798.91) text=u'#UD '>, <RectH(137.22,641786.72,267.87,641798.91) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(137.22,641800.70,347.28,641812.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>, <RectH(137.22,641814.74,331.73,641826.93) text=u'If VPEXTRQ in non-64-bit mode, VEX.W=1. '>]
No matching column!
[45.12]
[<RectH(45.12,641772.74,285.47,641784.93) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(45.12,641786.72,65.97,641798.91) text=u'#UD '>, <RectH(137.22,641786.72,267.87,641798.91) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(137.22,641800.70,347.28,641812.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>, <RectH(137.22,641814.74,331.73,641826.93) text=u'If VPEXTRQ in non-64-bit mode, VEX.W=1. '>]
Processing page 813
Processing page 814
Processing page 815
Writing to html/PEXTRW.html
No matching column!
[46.02]
[<RectH(46.02,644155.70,286.39,644167.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(46.02,644169.74,66.87,644181.93) text=u'#UD '>, <RectH(138.12,644169.74,268.72,644181.93) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(138.12,644183.72,348.11,644195.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
No matching column!
[46.02]
[<RectH(46.02,644155.70,286.39,644167.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(46.02,644169.74,66.87,644181.93) text=u'#UD '>, <RectH(138.12,644169.74,268.72,644181.93) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(138.12,644183.72,348.11,644195.91) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 816
Processing page 817
Processing page 818
Processing page 819
Writing to html/PHADDW_PHADDD.html
Processing page 820
Processing page 821
Writing to html/PHADDSW.html
Processing page 822
Processing page 823
Writing to html/PHMINPOSUW.html
Processing page 824
Processing page 825
Processing page 826
Writing to html/PHSUBW_PHSUBD.html
Processing page 827
Processing page 828
Writing to html/PHSUBSW.html
Processing page 829
Processing page 830
Processing page 831
Writing to html/PINSRB_PINSRD_PINSRQ.html
No matching column!
[46.02]
[<RectH(46.02,656648.72,274.14,656660.91) text=u'EVEX-encoded instruction, see Exceptions Type 5; '>, <RectH(46.02,656662.70,286.39,656674.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(46.02,656676.68,70.01,656688.87) text=u'#UD '>, <RectH(138.12,656676.68,268.74,656688.87) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(138.12,656690.72,350.56,656702.91) text=u'If VPINSRQ in non-64-bit mode with VEX.W=1. '>]
No matching column!
[46.02]
[<RectH(46.02,656648.72,274.14,656660.91) text=u'EVEX-encoded instruction, see Exceptions Type 5; '>, <RectH(46.02,656662.70,286.39,656674.89) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(46.02,656676.68,70.01,656688.87) text=u'#UD '>, <RectH(138.12,656676.68,268.74,656688.87) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>, <RectH(138.12,656690.72,350.56,656702.91) text=u'If VPINSRQ in non-64-bit mode with VEX.W=1. '>]
Processing page 832
Processing page 833
Writing to html/PINSRW.html
No matching column!
[46.02]
[<RectH(46.02,658657.70,274.14,658669.89) text=u'EVEX-encoded instruction, see Exceptions Type 5; '>, <RectH(46.02,658671.74,286.39,658683.93) text=u'EVEX-encoded instruction, see Exceptions Type E9NF. '>, <RectH(46.02,658685.72,70.01,658697.91) text=u'#UD '>, <RectH(138.12,658685.72,268.74,658697.91) text=u'If VEX.L = 1 or EVEX.L\u2019L > 0. '>]
Processing page 834
Processing page 835
Processing page 836
Writing to html/PMADDUBSW.html
Processing page 837
Processing page 838
Processing page 839
Writing to html/PMADDWD.html
Processing page 840
Processing page 841
Processing page 842
Processing page 843
Processing page 844
Processing page 845
Processing page 846
Writing to html/PMAXSB_PMAXSW_PMAXSD_PMAXSQ.html
Processing page 847
Processing page 848
Processing page 849
Processing page 850
Processing page 851
Writing to html/PMAXUB_PMAXUW.html
Processing page 852
Processing page 853
Processing page 854
Processing page 855
Writing to html/PMAXUD_PMAXUQ.html
Processing page 856
Processing page 857
Processing page 858
Processing page 859
Processing page 860
Writing to html/PMINSB_PMINSW.html
Processing page 861
Processing page 862
Processing page 863
Processing page 864
Writing to html/PMINSD_PMINSQ.html
Processing page 865
Processing page 866
Processing page 867
Processing page 868
Processing page 869
Writing to html/PMINUB_PMINUW.html
Processing page 870
Processing page 871
Processing page 872
Processing page 873
Writing to html/PMINUD_PMINUQ.html
Processing page 874
Processing page 875
Writing to html/PMOVMSKB.html
Processing page 876
Processing page 877
Processing page 878
Processing page 879
Processing page 880
Processing page 881
Processing page 882
Processing page 883
Processing page 884
Processing page 885
Writing to html/PMOVSX.html
Processing page 886
Processing page 887
Processing page 888
Processing page 889
Processing page 890
Processing page 891
Processing page 892
Processing page 893
Processing page 894
Writing to html/PMOVZX.html
Processing page 895
Processing page 896
Processing page 897
Writing to html/PMULDQ.html
Processing page 898
Processing page 899
Processing page 900
Processing page 901
Writing to html/PMULHRSW.html
Processing page 902
Processing page 903
Processing page 904
Processing page 905
Writing to html/PMULHUW.html
Processing page 906
Processing page 907
Processing page 908
Processing page 909
Writing to html/PMULHW.html
Processing page 910
Processing page 911
Processing page 912
Processing page 913
Writing to html/PMULLD_PMULLQ.html
Processing page 914
Processing page 915
Processing page 916
Processing page 917
Writing to html/PMULLW.html
Processing page 918
Processing page 919
Processing page 920
Writing to html/PMULUDQ.html
Processing page 921
Processing page 922
Processing page 923
Processing page 924
Processing page 925
Writing to html/POP.html
Processing page 926
Processing page 927
Writing to html/POPA_POPAD.html
Processing page 928
Processing page 929
Writing to html/POPCNT.html
Processing page 930
Processing page 931
Processing page 932
Processing page 933
Processing page 934
Writing to html/POPF_POPFD_POPFQ.html
Processing page 935
Processing page 936
Processing page 937
Writing to html/POR.html
Processing page 938
Processing page 939
Writing to html/PREFETCHh.html
Processing page 940
Processing page 941
Writing to html/PREFETCHW.html
Processing page 942
Processing page 943
Writing to html/PREFETCHWT1.html
Processing page 944
Processing page 945
Processing page 946
Processing page 947
Writing to html/PSADBW.html
Processing page 948
Processing page 949
Processing page 950
Processing page 951
Writing to html/PSHUFB.html
Processing page 952
Processing page 953
Processing page 954
Processing page 955
Writing to html/PSHUFD.html
No matching column!
[46.02]
[<RectH(46.02,755113.70,286.39,755125.89) text=u'EVEX-encoded instruction, see Exceptions Type E4NF. '>, <RectH(46.02,755127.74,66.87,755139.93) text=u'#UD '>, <RectH(138.12,755127.74,341.04,755139.93) text=u'If VEX.vvvv \u2260 1111B or EVEX.vvvv \u2260 1111B. '>]
Processing page 956
Processing page 957
Processing page 958
Writing to html/PSHUFHW.html
No matching column!
[45.12]
[<RectH(45.12,757753.70,296.76,757765.89) text=u'EVEX-encoded instruction, see Exceptions Type E4NF.nb '>, <RectH(45.12,757767.74,69.15,757779.93) text=u'#UD '>, <RectH(137.21,757767.74,350.47,757779.93) text=u'If VEX.vvvv != 1111B, or EVEX.vvvv != 1111B. '>]
Processing page 959
Processing page 960
Processing page 961
Writing to html/PSHUFLW.html
No matching column!
[46.02]
[<RectH(46.02,760129.70,297.67,760141.89) text=u'EVEX-encoded instruction, see Exceptions Type E4NF.nb '>, <RectH(46.02,760143.74,70.04,760155.93) text=u'#UD '>, <RectH(138.16,760143.74,351.31,760155.93) text=u'If VEX.vvvv != 1111B, or EVEX.vvvv != 1111B. '>]
Processing page 962
Writing to html/PSHUFW.html
Processing page 963
Processing page 964
Processing page 965
Processing page 966
Writing to html/PSIGNB_PSIGNW_PSIGND.html
Processing page 967
Processing page 968
Writing to html/PSLLDQ.html
Processing page 969
Processing page 970
Processing page 971
Processing page 972
Processing page 973
Processing page 974
Processing page 975
Processing page 976
Processing page 977
Processing page 978
Processing page 979
Processing page 980
Writing to html/PSLLW_PSLLD_PSLLQ.html
No matching column!
[45.12]
[<RectH(45.12,774656.72,163.98,774668.91) text=u'VEX-encoded instructions: '>, <RectH(62.10,774671.72,349.91,774683.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,774686.72,345.05,774698.91) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,774714.68,287.05,774726.87) text=u'EVEX-encoded VPSLLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,774742.70,163.01,774754.89) text=u'EVEX-encoded VPSLLD/Q: '>, <RectH(62.10,774757.70,367.35,774769.89) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,774772.71,332.64,774784.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,774656.72,163.98,774668.91) text=u'VEX-encoded instructions: '>, <RectH(62.10,774671.72,349.91,774683.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,774686.72,345.05,774698.91) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,774714.68,287.05,774726.87) text=u'EVEX-encoded VPSLLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,774742.70,163.01,774754.89) text=u'EVEX-encoded VPSLLD/Q: '>, <RectH(62.10,774757.70,367.35,774769.89) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,774772.71,332.64,774784.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,774656.72,163.98,774668.91) text=u'VEX-encoded instructions: '>, <RectH(62.10,774671.72,349.91,774683.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,774686.72,345.05,774698.91) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,774714.68,287.05,774726.87) text=u'EVEX-encoded VPSLLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,774742.70,163.01,774754.89) text=u'EVEX-encoded VPSLLD/Q: '>, <RectH(62.10,774757.70,367.35,774769.89) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,774772.71,332.64,774784.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,774656.72,163.98,774668.91) text=u'VEX-encoded instructions: '>, <RectH(62.10,774671.72,349.91,774683.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,774686.72,345.05,774698.91) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,774714.68,287.05,774726.87) text=u'EVEX-encoded VPSLLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,774742.70,163.01,774754.89) text=u'EVEX-encoded VPSLLD/Q: '>, <RectH(62.10,774757.70,367.35,774769.89) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,774772.71,332.64,774784.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
Processing page 981
Processing page 982
Processing page 983
Processing page 984
Processing page 985
Processing page 986
Processing page 987
Processing page 988
Processing page 989
Processing page 990
Writing to html/PSRAW_PSRAD_PSRAQ.html
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.0, 238.32899999999998, 266.8320000000001, 314.83800000000014]
[<RectH(45.00,776230.21,161.37,776240.97) text=u'EVEX.NDS.512.66.0F.WIG E1 /r '>, <RectH(238.33,776230.21,260.64,776240.97) text=u'M128 '>, <RectH(266.83,776230.21,281.33,776240.97) text=u'V/V '>, <RectH(314.84,776230.21,554.94,776240.97) text=u'AVX512BW Shift words in zmm2 right by amount specified in '>, <RectH(366.78,776241.19,537.47,776251.95) text=u'xmm3/m128 while shifting in sign bits using '>, <RectH(45.00,776245.21,212.81,776255.97) text=u'VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776252.17,420.14,776262.93) text=u'writemask k1. '>, <RectH(45.00,776271.19,173.50,776281.95) text=u'EVEX.NDD.128.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776271.19,257.33,776281.95) text=u'FVMI '>, <RectH(266.81,776271.19,281.31,776281.95) text=u'V/V '>, <RectH(314.82,776271.19,357.13,776281.95) text=u'AVX512VL '>, <RectH(366.78,776271.19,551.19,776281.95) text=u'Shift words in xmm2/m128 right by imm8 while '>, <RectH(314.76,776282.17,359.56,776292.93) text=u'AVX512BW '>, <RectH(366.78,776282.17,516.36,776292.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776286.19,211.19,776296.95) text=u'VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8 '>, <RectH(45.00,776301.19,173.50,776311.95) text=u'EVEX.NDD.256.66.0F.WIG 71 /4 ib '>, <RectH(238.32,776301.19,257.33,776311.95) text=u'FVMI '>, <RectH(266.81,776301.19,281.31,776311.95) text=u'V/V '>, <RectH(314.82,776301.19,357.13,776311.95) text=u'AVX512VL '>, <RectH(366.78,776301.19,550.99,776311.95) text=u'Shift words in ymm2/m256 right by imm8 while '>, <RectH(314.76,776312.17,359.56,776322.93) text=u'AVX512BW '>, <RectH(366.78,776312.17,516.36,776322.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776316.19,211.00,776326.95) text=u'VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8 '>, <RectH(45.00,776331.19,173.57,776341.95) text=u'EVEX.NDD.512.66.0F.WIG 71 /4 ib '>, <RectH(238.39,776331.19,257.41,776341.95) text=u'FVMI '>, <RectH(266.90,776331.19,281.40,776341.95) text=u'V/V '>, <RectH(314.90,776331.19,550.49,776341.95) text=u'AVX512BW Shift words in zmm2/m512 right by imm8 while '>, <RectH(366.78,776342.17,516.36,776352.93) text=u'shifting in sign bits using writemask k1. '>, <RectH(45.00,776346.19,210.00,776356.96) text=u'VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8 '>, <RectH(45.00,776372.17,159.22,776382.94) text=u'EVEX.NDS.128.66.0F.W0 E2 /r '>, <RectH(238.27,776372.17,260.58,776382.94) text=u'M128 '>, <RectH(266.78,776372.17,281.28,776382.94) text=u'V/V '>, <RectH(314.78,776372.17,357.10,776382.94) text=u'AVX512VL '>, <RectH(366.78,776372.17,535.89,776382.94) text=u'Shift doublewords in xmm2 right by amount '>, <RectH(314.76,776383.21,351.70,776393.98) text=u'AVX512F '>, <RectH(366.78,776383.21,558.11,776393.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776387.17,212.47,776397.94) text=u'VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776394.19,442.53,776404.96) text=u'using writemask k1. '>, <RectH(45.00,776413.21,159.22,776423.98) text=u'EVEX.NDS.256.66.0F.W0 E2 /r '>, <RectH(238.27,776413.21,260.58,776423.98) text=u'M128 '>, <RectH(266.78,776413.21,281.28,776423.98) text=u'V/V '>, <RectH(314.78,776413.21,357.10,776423.98) text=u'AVX512VL '>, <RectH(366.78,776413.21,535.71,776423.98) text=u'Shift doublewords in ymm2 right by amount '>, <RectH(314.76,776424.19,351.70,776434.96) text=u'AVX512F '>, <RectH(366.78,776424.19,558.11,776434.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776428.21,212.29,776438.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776435.23,442.53,776446.00) text=u'using writemask k1. '>, <RectH(45.00,776454.19,159.22,776464.96) text=u'EVEX.NDS.512.66.0F.W0 E2 /r '>, <RectH(238.27,776454.19,260.58,776464.96) text=u'M128 '>, <RectH(266.77,776454.19,281.27,776464.96) text=u'V/V '>, <RectH(314.77,776454.19,351.71,776464.96) text=u'AVX512F '>, <RectH(366.79,776454.19,535.29,776464.96) text=u'Shift doublewords in zmm2 right by amount '>, <RectH(366.78,776465.23,558.11,776476.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776469.19,211.26,776479.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776476.21,442.53,776486.98) text=u'using writemask k1. '>, <RectH(45.00,776495.23,171.45,776506.00) text=u'EVEX.NDD.128.66.0F.W0 72 /4 ib '>, <RectH(238.37,776495.23,250.85,776506.00) text=u'FVI '>, <RectH(266.88,776495.23,281.34,776506.00) text=u'V/V '>, <RectH(314.85,776495.23,357.20,776506.00) text=u'AVX512VL '>, <RectH(366.78,776495.23,555.58,776506.00) text=u'Shift doublewords in xmm2/m128/m32bcst right '>, <RectH(314.76,776506.21,351.70,776516.98) text=u'AVX512F '>, <RectH(366.78,776506.21,520.33,776516.98) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776510.23,224.98,776521.00) text=u'VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, '>, <RectH(366.78,776517.19,420.14,776527.96) text=u'writemask k1. '>, <RectH(45.00,776521.21,66.10,776531.98) text=u'imm8 '>, <RectH(45.00,776536.21,171.45,776546.98) text=u'EVEX.NDD.256.66.0F.W0 72 /4 ib '>, <RectH(238.37,776536.21,250.85,776546.98) text=u'FVI '>, <RectH(266.88,776536.21,281.34,776546.98) text=u'V/V '>, <RectH(314.85,776536.21,357.20,776546.98) text=u'AVX512VL '>, <RectH(366.78,776536.21,555.42,776546.98) text=u'Shift doublewords in ymm2/m256/m32bcst right '>, <RectH(314.76,776547.19,351.70,776557.96) text=u'AVX512F '>, <RectH(366.78,776547.19,520.33,776557.96) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776551.21,224.79,776561.98) text=u'VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, '>, <RectH(366.78,776558.23,420.14,776569.00) text=u'writemask k1. '>, <RectH(45.00,776562.19,66.10,776572.96) text=u'imm8 '>, <RectH(45.00,776577.19,171.43,776587.96) text=u'EVEX.NDD.512.66.0F.W0 72 /4 ib '>, <RectH(238.35,776577.19,250.82,776587.96) text=u'FVI '>, <RectH(266.85,776577.19,281.31,776587.96) text=u'V/V '>, <RectH(314.81,776577.19,351.78,776587.96) text=u'AVX512F '>, <RectH(366.85,776577.19,554.92,776587.96) text=u'Shift doublewords in zmm2/m512/m32bcst right '>, <RectH(366.78,776588.23,520.33,776599.00) text=u'by imm8 while shifting in sign bits using '>, <RectH(45.00,776592.19,223.80,776602.96) text=u'VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, '>, <RectH(366.78,776599.21,420.14,776609.98) text=u'writemask k1. '>, <RectH(45.00,776603.23,66.10,776614.00) text=u'imm8 '>, <RectH(45.00,776618.23,159.22,776629.00) text=u'EVEX.NDS.128.66.0F.W1 E2 /r '>, <RectH(238.27,776618.23,260.58,776629.00) text=u'M128 '>, <RectH(266.78,776618.23,281.28,776629.00) text=u'V/V '>, <RectH(314.78,776618.23,357.10,776629.00) text=u'AVX512VL '>, <RectH(366.78,776618.23,529.00,776629.00) text=u'Shift quadwords in xmm2 right by amount '>, <RectH(314.76,776629.21,351.70,776639.98) text=u'AVX512F '>, <RectH(366.78,776629.21,558.11,776639.98) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776633.23,212.58,776644.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128 '>, <RectH(366.78,776640.19,442.53,776650.96) text=u'using writemask k1. '>, <RectH(45.00,776659.21,159.22,776669.98) text=u'EVEX.NDS.256.66.0F.W1 E2 /r '>, <RectH(238.27,776659.21,260.58,776669.98) text=u'M128 '>, <RectH(266.78,776659.21,281.28,776669.98) text=u'V/V '>, <RectH(314.78,776659.21,357.10,776669.98) text=u'AVX512VL '>, <RectH(366.78,776659.21,528.92,776669.98) text=u'Shift quadwords in ymm2 right by amount '>, <RectH(314.76,776670.19,351.70,776680.96) text=u'AVX512F '>, <RectH(366.78,776670.19,558.11,776680.96) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776674.21,212.39,776684.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128 '>, <RectH(366.78,776681.23,442.53,776692.00) text=u'using writemask k1. '>, <RectH(45.00,776700.20,159.25,776710.96) text=u'EVEX.NDS.512.66.0F.W1 E2 /r '>, <RectH(238.31,776700.20,260.61,776710.96) text=u'M128 '>, <RectH(266.81,776700.20,281.31,776710.96) text=u'V/V '>, <RectH(314.81,776700.20,351.76,776710.96) text=u'AVX512F '>, <RectH(366.83,776700.20,528.47,776710.96) text=u'Shift quadwords in zmm2 right by amount '>, <RectH(366.78,776711.24,558.11,776722.00) text=u'specified in xmm3/m128 while shifting in sign bits '>, <RectH(45.00,776715.20,211.39,776725.96) text=u'VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128 '>, <RectH(366.78,776722.22,442.53,776732.98) text=u'using writemask k1. '>, <RectH(45.00,776741.24,171.45,776752.00) text=u'EVEX.NDD.128.66.0F.W1 72 /4 ib '>, <RectH(238.37,776741.24,250.85,776752.00) text=u'FVI '>, <RectH(266.88,776741.24,281.34,776752.00) text=u'V/V '>, <RectH(314.85,776741.24,357.20,776752.00) text=u'AVX512VL '>, <RectH(366.78,776741.24,558.29,776752.00) text=u'Shift quadwords in xmm2/m128/m64bcst right by '>, <RectH(314.76,776752.22,351.70,776762.98) text=u'AVX512F '>, <RectH(366.78,776752.22,550.97,776762.98) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776756.24,225.13,776767.00) text=u'VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, '>, <RectH(366.78,776763.20,378.03,776773.96) text=u'k1. '>, <RectH(45.00,776767.22,66.10,776777.98) text=u'imm8 '>, <RectH(45.00,776782.22,171.45,776792.98) text=u'EVEX.NDD.256.66.0F.W1 72 /4 ib '>, <RectH(238.37,776782.22,250.85,776792.98) text=u'FVI '>, <RectH(266.88,776782.22,281.34,776792.98) text=u'V/V '>, <RectH(314.85,776782.22,357.20,776792.98) text=u'AVX512VL '>, <RectH(366.78,776782.22,558.34,776792.98) text=u'Shift quadwords in ymm2/m256/m64bcst right by '>, <RectH(314.76,776793.20,351.70,776803.96) text=u'AVX512F '>, <RectH(366.78,776793.20,550.97,776803.96) text=u'imm8 while shifting in sign bits using writemask '>, <RectH(45.00,776797.22,224.87,776807.98) text=u'VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, '>, <RectH(366.78,776804.24,378.03,776815.00) text=u'k1. '>, <RectH(45.00,776808.20,66.10,776818.96) text=u'imm8 '>]
No matching column!
[45.12]
[<RectH(45.12,782961.74,163.98,782973.93) text=u'VEX-encoded instructions: '>, <RectH(62.10,782976.74,349.91,782988.93) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,782991.74,345.05,783003.93) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,783019.70,289.84,783031.89) text=u'EVEX-encoded VPSRAW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,783047.72,165.39,783059.91) text=u'EVEX-encoded VPSRAD/Q: '>, <RectH(62.10,783062.72,367.35,783074.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,783077.73,332.64,783089.91) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,782961.74,163.98,782973.93) text=u'VEX-encoded instructions: '>, <RectH(62.10,782976.74,349.91,782988.93) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,782991.74,345.05,783003.93) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,783019.70,289.84,783031.89) text=u'EVEX-encoded VPSRAW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,783047.72,165.39,783059.91) text=u'EVEX-encoded VPSRAD/Q: '>, <RectH(62.10,783062.72,367.35,783074.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,783077.73,332.64,783089.91) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,782961.74,163.98,782973.93) text=u'VEX-encoded instructions: '>, <RectH(62.10,782976.74,349.91,782988.93) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,782991.74,345.05,783003.93) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,783019.70,289.84,783031.89) text=u'EVEX-encoded VPSRAW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,783047.72,165.39,783059.91) text=u'EVEX-encoded VPSRAD/Q: '>, <RectH(62.10,783062.72,367.35,783074.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,783077.73,332.64,783089.91) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,782961.74,163.98,782973.93) text=u'VEX-encoded instructions: '>, <RectH(62.10,782976.74,349.91,782988.93) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(62.10,782991.74,345.05,783003.93) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,783019.70,289.84,783031.89) text=u'EVEX-encoded VPSRAW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,783047.72,165.39,783059.91) text=u'EVEX-encoded VPSRAD/Q: '>, <RectH(62.10,783062.72,367.35,783074.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(62.10,783077.73,332.64,783089.91) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
Processing page 991
Processing page 992
Writing to html/PSRLDQ.html
Processing page 993
Processing page 994
Processing page 995
Processing page 996
Processing page 997
Processing page 998
Processing page 999
Processing page 1000
Processing page 1001
Processing page 1002
Processing page 1003
Processing page 1004
Writing to html/PSRLW_PSRLD_PSRLQ.html
No matching column!
[45.12]
[<RectH(45.12,794037.74,163.98,794049.93) text=u'VEX-encoded instructions: '>, <RectH(137.22,794051.72,422.43,794063.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(137.22,794065.70,417.45,794077.89) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,794093.72,288.39,794105.91) text=u'EVEX-encoded VPSRLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,794121.74,164.25,794133.93) text=u'EVEX-encoded VPSRLD/Q: '>, <RectH(137.22,794135.72,440.27,794147.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(137.22,794149.70,405.41,794161.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,794037.74,163.98,794049.93) text=u'VEX-encoded instructions: '>, <RectH(137.22,794051.72,422.43,794063.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(137.22,794065.70,417.45,794077.89) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,794093.72,288.39,794105.91) text=u'EVEX-encoded VPSRLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,794121.74,164.25,794133.93) text=u'EVEX-encoded VPSRLD/Q: '>, <RectH(137.22,794135.72,440.27,794147.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(137.22,794149.70,405.41,794161.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,794037.74,163.98,794049.93) text=u'VEX-encoded instructions: '>, <RectH(137.22,794051.72,422.43,794063.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(137.22,794065.70,417.45,794077.89) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,794093.72,288.39,794105.91) text=u'EVEX-encoded VPSRLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,794121.74,164.25,794133.93) text=u'EVEX-encoded VPSRLD/Q: '>, <RectH(137.22,794135.72,440.27,794147.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(137.22,794149.70,405.41,794161.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
No matching column!
[45.12]
[<RectH(45.12,794037.74,163.98,794049.93) text=u'VEX-encoded instructions: '>, <RectH(137.22,794051.72,422.43,794063.91) text=u'Syntax with RM/RVM operand encoding, see Exceptions Type 4. '>, <RectH(137.22,794065.70,417.45,794077.89) text=u'Syntax with MI/VMI operand encoding, see Exceptions Type 7. '>, <RectH(45.12,794093.72,288.39,794105.91) text=u'EVEX-encoded VPSRLW, see Exceptions Type E4NF.nb. '>, <RectH(45.12,794121.74,164.25,794133.93) text=u'EVEX-encoded VPSRLD/Q: '>, <RectH(137.22,794135.72,440.27,794147.91) text=u'Syntax with M128 operand encoding, see Exceptions Type E4NF.nb. '>, <RectH(137.22,794149.70,405.41,794161.89) text=u'Syntax with FVI operand encoding, see Exceptions Type E4. '>]
Processing page 1005
Processing page 1006
Processing page 1007
Processing page 1008
Processing page 1009
Processing page 1010
Processing page 1011
Writing to html/PSUBB_PSUBW_PSUBD.html
Processing page 1012
Processing page 1013
Processing page 1014
Writing to html/PSUBQ.html
Processing page 1015
Processing page 1016
Processing page 1017
Processing page 1018
Writing to html/PSUBSB_PSUBSW.html
No matching column!
[48.36, 248.34900000000005, 273.1260000000001, 321.21300000000014]
[<RectH(48.36,803158.21,164.73,803168.97) text=u'EVEX.NDS.512.66.0F.WIG E9 /r '>, <RectH(248.35,803158.21,265.31,803168.97) text=u'FVM '>, <RectH(273.13,803158.21,287.65,803168.97) text=u'V/V '>, <RectH(321.21,803158.21,527.17,803168.97) text=u'AVX512BW Subtract packed signed word integers in '>, <RectH(373.14,803169.19,554.72,803179.95) text=u'zmm3/m512 from packed signed word integers '>, <RectH(48.36,803173.21,220.44,803183.97) text=u'VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(373.14,803180.17,554.97,803190.93) text=u'in zmm2 and saturate results and store in zmm1 '>, <RectH(373.14,803191.21,448.90,803201.97) text=u'using writemask k1. '>]
No matching column!
[48.36, 248.34900000000005, 273.1260000000001, 321.21300000000014]
[<RectH(48.36,803158.21,164.73,803168.97) text=u'EVEX.NDS.512.66.0F.WIG E9 /r '>, <RectH(248.35,803158.21,265.31,803168.97) text=u'FVM '>, <RectH(273.13,803158.21,287.65,803168.97) text=u'V/V '>, <RectH(321.21,803158.21,527.17,803168.97) text=u'AVX512BW Subtract packed signed word integers in '>, <RectH(373.14,803169.19,554.72,803179.95) text=u'zmm3/m512 from packed signed word integers '>, <RectH(48.36,803173.21,220.44,803183.97) text=u'VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(373.14,803180.17,554.97,803190.93) text=u'in zmm2 and saturate results and store in zmm1 '>, <RectH(373.14,803191.21,448.90,803201.97) text=u'using writemask k1. '>]
No matching column!
[48.36, 248.34900000000005, 273.1260000000001, 321.21300000000014]
[<RectH(48.36,803158.21,164.73,803168.97) text=u'EVEX.NDS.512.66.0F.WIG E9 /r '>, <RectH(248.35,803158.21,265.31,803168.97) text=u'FVM '>, <RectH(273.13,803158.21,287.65,803168.97) text=u'V/V '>, <RectH(321.21,803158.21,527.17,803168.97) text=u'AVX512BW Subtract packed signed word integers in '>, <RectH(373.14,803169.19,554.72,803179.95) text=u'zmm3/m512 from packed signed word integers '>, <RectH(48.36,803173.21,220.44,803183.97) text=u'VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(373.14,803180.17,554.97,803190.93) text=u'in zmm2 and saturate results and store in zmm1 '>, <RectH(373.14,803191.21,448.90,803201.97) text=u'using writemask k1. '>]
Processing page 1019
Processing page 1020
Processing page 1021
Processing page 1022
Writing to html/PSUBUSB_PSUBUSW.html
No matching column!
[47.28, 256.3176, 281.04420000000005, 329.1258]
[<RectH(47.28,806326.21,164.42,806336.97) text=u'EVEX.NDS.512.66.0F.WIG D9 /r '>, <RectH(256.32,806326.21,273.28,806336.97) text=u'FVM '>, <RectH(281.04,806326.21,295.57,806336.97) text=u'V/V '>, <RectH(329.13,806326.21,544.51,806336.97) text=u'AVX512BW Subtract packed unsigned word integers in '>, <RectH(381.00,806337.19,539.26,806347.95) text=u'zmm3/m512 from packed unsigned word '>, <RectH(47.28,806341.21,225.04,806351.97) text=u'VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(381.00,806348.17,551.08,806358.93) text=u'integers in zmm2, saturate results and store '>, <RectH(381.00,806359.21,491.29,806369.97) text=u'in zmm1 using writemask k1. '>]
No matching column!
[47.28, 256.3176, 281.04420000000005, 329.1258]
[<RectH(47.28,806326.21,164.42,806336.97) text=u'EVEX.NDS.512.66.0F.WIG D9 /r '>, <RectH(256.32,806326.21,273.28,806336.97) text=u'FVM '>, <RectH(281.04,806326.21,295.57,806336.97) text=u'V/V '>, <RectH(329.13,806326.21,544.51,806336.97) text=u'AVX512BW Subtract packed unsigned word integers in '>, <RectH(381.00,806337.19,539.26,806347.95) text=u'zmm3/m512 from packed unsigned word '>, <RectH(47.28,806341.21,225.04,806351.97) text=u'VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(381.00,806348.17,551.08,806358.93) text=u'integers in zmm2, saturate results and store '>, <RectH(381.00,806359.21,491.29,806369.97) text=u'in zmm1 using writemask k1. '>]
No matching column!
[47.28, 256.3176, 281.04420000000005, 329.1258]
[<RectH(47.28,806326.21,164.42,806336.97) text=u'EVEX.NDS.512.66.0F.WIG D9 /r '>, <RectH(256.32,806326.21,273.28,806336.97) text=u'FVM '>, <RectH(281.04,806326.21,295.57,806336.97) text=u'V/V '>, <RectH(329.13,806326.21,544.51,806336.97) text=u'AVX512BW Subtract packed unsigned word integers in '>, <RectH(381.00,806337.19,539.26,806347.95) text=u'zmm3/m512 from packed unsigned word '>, <RectH(47.28,806341.21,225.04,806351.97) text=u'VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512 '>, <RectH(381.00,806348.17,551.08,806358.93) text=u'integers in zmm2, saturate results and store '>, <RectH(381.00,806359.21,491.29,806369.97) text=u'in zmm1 using writemask k1. '>]
Processing page 1023
Processing page 1024
Writing to html/PTEST.html
Processing page 1025
Processing page 1026
Writing to html/PTWRITE.html
Processing page 1027
Processing page 1028
Processing page 1029
Processing page 1030
Processing page 1031
Processing page 1032
Processing page 1033
Processing page 1034
Processing page 1035
Processing page 1036
Writing to html/PUNPCKHBW_PUNPCKHWD_PUNPCKHDQ_PUNPCKHQDQ.html
Processing page 1037
Processing page 1038
Processing page 1039
Processing page 1040
Processing page 1041
Processing page 1042
Processing page 1043
Processing page 1044
Processing page 1045
Processing page 1046
Writing to html/PUNPCKLBW_PUNPCKLWD_PUNPCKLDQ_PUNPCKLQDQ.html
Processing page 1047
Processing page 1048
Processing page 1049
Writing to html/PUSH.html
Processing page 1050
Processing page 1051
Writing to html/PUSHA_PUSHAD.html
Processing page 1052
Processing page 1053
Writing to html/PUSHF_PUSHFD.html
Processing page 1054
Processing page 1055
Processing page 1056
Writing to html/PXOR.html
Processing page 1057
Processing page 1058
Processing page 1059
Processing page 1060
Processing page 1061
Writing to html/RCL_RCR_ROL_ROR.html
Processing page 1062
Processing page 1063
Writing to html/RCPPS.html
Processing page 1064
Processing page 1065
Writing to html/RCPSS.html
Processing page 1066
Processing page 1067
Writing to html/RDFSBASE_RDGSBASE.html
Processing page 1068
Processing page 1069
Writing to html/RDMSR.html
Processing page 1070
Writing to html/RDPID.html
Processing page 1071
Processing page 1072
Writing to html/RDPKRU.html
Processing page 1073
Processing page 1074
Processing page 1075
Processing page 1076
Writing to html/RDPMC.html
autoclose mismatch
No matching OpenTag for em found!
[<OpenTag p >, u'I', u'n', u't', u'e', u'l', <OpenTag em >, <OpenTag sup >, u'\xae', <CloseTag sup>, <CloseTag em>, u' ', u'C', u'o', u'r', u'e', u'\u2122', u' ', u'S', u'o', u'l', u'o', u' ', u'a', u'n', u'd', u' ', u'I', u'n', u't', u'e', u'l', <OpenTag em >, <OpenTag sup >, u'\xae', <CloseTag sup>, <CloseTag em>, u' ', u'C', u'o', u'r', u'e', u'\u2122', u' ', u'D', u'u', u'o', ' ', u'p', u'r', u'o', u'c', u'e', u's', u's', u'o', u'r', u's', u',', u' ', u'D', u'u', u'a', u'l', u'-', u'c', u'o', u'r', u'e', u' ', u'I', u'n', u't', u'e', u'l', <OpenTag em >, <OpenTag sup >, u'\xae', <CloseTag sup>, <CloseTag em>, u' ', u'X', u'e', u'o', u'n', <OpenTag em >, <OpenTag sup >, u'\xae', ' ', <CloseTag em>, u'p', u'r', u'o', u'c', u'e', u's', u's', u'o', u'r', u' ', u'L', u'V', <CloseTag sup>]
autoclose mismatch
autoclose mismatch
autoclose mismatch
htmltext.py: line124
Processing page 1077
Processing page 1078
Writing to html/RDRAND.html
Processing page 1079
Processing page 1080
Writing to html/RDSEED.html
Processing page 1081
Processing page 1082
Writing to html/RDTSC.html
Processing page 1083
Processing page 1084
Writing to html/RDTSCP.html
Processing page 1085
Processing page 1086
Processing page 1087
Processing page 1088
Writing to html/REP_REPE_REPZ_REPNE_REPNZ.html
Processing page 1089
Processing page 1090
Processing page 1091
Processing page 1092
Processing page 1093
Processing page 1094
Processing page 1095
Processing page 1096
Processing page 1097
Processing page 1098
Writing to html/RET.html
Processing page 1099
Writing to html/RORX.html
Processing page 1100
Processing page 1101
Processing page 1102
Writing to html/ROUNDPD.html
Processing page 1103
Processing page 1104
Processing page 1105
Writing to html/ROUNDPS.html
Processing page 1106
Processing page 1107
Writing to html/ROUNDSD.html
Processing page 1108
Processing page 1109
Writing to html/ROUNDSS.html
Processing page 1110
Processing page 1111
Writing to html/RSM.html
Processing page 1112
Processing page 1113
Writing to html/RSQRTPS.html
Processing page 1114
Processing page 1115
Writing to html/RSQRTSS.html
Processing page 1116
Processing page 1117
Writing to html/SAHF.html
Processing page 1118
Processing page 1119
Processing page 1120
Processing page 1121
Processing page 1122
Writing to html/SAL_SAR_SHL_SHR.html
Processing page 1123
Processing page 1124
Writing to html/SARX_SHLX_SHRX.html
Processing page 1125
Processing page 1126
Processing page 1127
Writing to html/SBB.html
Processing page 1128
Processing page 1129
Processing page 1130
Processing page 1131
Writing to html/SCAS_SCASB_SCASW_SCASD.html
Processing page 1132
Processing page 1133
Processing page 1134
Writing to html/SETcc.html
Processing page 1135
Writing to html/SFENCE.html
Processing page 1136
Processing page 1137
Writing to html/SGDT.html
Processing page 1138
Processing page 1139
Writing to html/SHA1RNDS4.html
Processing page 1140
Writing to html/SHA1NEXTE.html
Processing page 1141
Writing to html/SHA1MSG1.html
Processing page 1142
Writing to html/SHA1MSG2.html
Processing page 1143
Processing page 1144
Writing to html/SHA256RNDS2.html
Processing page 1145
Writing to html/SHA256MSG1.html
Processing page 1146
Writing to html/SHA256MSG2.html
Processing page 1147
Processing page 1148
Processing page 1149
Writing to html/SHLD.html
Processing page 1150
Processing page 1151
Processing page 1152
Writing to html/SHRD.html
Processing page 1153
Processing page 1154
Processing page 1155
Processing page 1156
Processing page 1157
Writing to html/SHUFPD.html
Processing page 1158
Processing page 1159
Processing page 1160
Processing page 1161
Writing to html/SHUFPS.html
Processing page 1162
Processing page 1163
Writing to html/SIDT.html
Processing page 1164
Processing page 1165
Writing to html/SLDT.html
Processing page 1166
Processing page 1167
Writing to html/SMSW.html
Processing page 1168
Processing page 1169
Processing page 1170
Writing to html/SQRTPD.html
Processing page 1171
Processing page 1172
Processing page 1173
Writing to html/SQRTPS.html
Processing page 1174
Processing page 1175
Writing to html/SQRTSD.html
Processing page 1176
Processing page 1177
Writing to html/SQRTSS.html
Processing page 1178
Writing to html/STAC.html
Processing page 1179
Writing to html/STC.html
Processing page 1180
Writing to html/STD.html
Processing page 1181
Processing page 1182
Writing to html/STI.html
Processing page 1183
Writing to html/STMXCSR.html
Processing page 1184
Processing page 1185
Processing page 1186
Processing page 1187
Writing to html/STOS_STOSB_STOSW_STOSD_STOSQ.html
Processing page 1188
Processing page 1189
Writing to html/STR.html
Processing page 1190
Processing page 1191
Writing to html/SUB.html
Processing page 1192
Processing page 1193
Processing page 1194
Writing to html/SUBPD.html
Processing page 1195
Processing page 1196
Processing page 1197
Writing to html/SUBPS.html
Processing page 1198
Processing page 1199
Writing to html/SUBSD.html
Processing page 1200
Processing page 1201
Writing to html/SUBSS.html
Processing page 1202
Processing page 1203
Writing to html/SWAPGS.html
Processing page 1204
Processing page 1205
Writing to html/SYSCALL.html
Processing page 1206
Processing page 1207
Processing page 1208
Writing to html/SYSENTER.html
Processing page 1209
Processing page 1210
Processing page 1211
Writing to html/SYSEXIT.html
Processing page 1212
Processing page 1213
Processing page 1214
Writing to html/SYSRET.html
Processing page 1215
Processing page 1216
Writing to html/TEST.html
Processing page 1217
Processing page 1218
Writing to html/TZCNT.html
Processing page 1219
Processing page 1220
Writing to html/UCOMISD.html
Processing page 1221
Processing page 1222
Writing to html/UCOMISS.html
Processing page 1223
Writing to html/UD2.html
Processing page 1224
Processing page 1225
Processing page 1226
Processing page 1227
Writing to html/UNPCKHPD.html
No matching column!
[51.1203, 205.68, 236.1603, 284.88, 341.8203]
[<RectH(51.12,967906.04,84.68,967916.98) text=u'Opcode/'>, <RectH(205.68,967906.04,224.36,967916.98) text=u'Op /'>, <RectH(236.16,967906.04,263.90,967916.98) text=u'64/32 '>, <RectH(284.88,967906.04,311.79,967916.98) text=u'CPUID '>, <RectH(341.82,967906.04,387.48,967916.98) text=u'Description '>, <RectH(51.12,967916.00,95.08,967926.94) text=u'Instruction '>, <RectV(205.68,967916.00,215.88,967926.94) text=u'En '>, <RectH(236.16,967916.00,273.22,967926.94) text=u'bit Mode '>, <RectH(284.88,967916.00,318.50,967926.94) text=u'Feature '>, <RectH(236.16,967926.02,268.30,967936.96) text=u'Support '>, <RectH(284.88,967926.02,302.00,967936.96) text=u'Flag '>, <RectH(51.12,967939.21,95.18,967949.98) text=u'66 0F 15 /r '>, <RectH(208.92,967939.21,220.90,967949.98) text=u'RM '>, <RectH(236.16,967939.21,250.61,967949.98) text=u'V/V '>, <RectH(284.89,967939.21,304.45,967949.98) text=u'SSE2 '>, <RectH(341.85,967939.21,551.90,967949.98) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(341.82,967950.19,503.49,967960.96) text=u'values from high quadwords of xmm1 and '>, <RectH(51.12,967952.17,174.16,967962.94) text=u'UNPCKHPD xmm1, xmm2/m128 '>, <RectH(341.82,967961.17,393.27,967971.94) text=u'xmm2/m128. '>, <RectH(51.12,967976.17,163.35,967986.94) text=u'VEX.NDS.128.66.0F.WIG 15 /r '>, <RectH(206.34,967976.17,223.78,967986.94) text=u'RVM '>, <RectH(236.28,967976.17,250.74,967986.94) text=u'V/V '>, <RectH(285.02,967976.17,301.48,967986.94) text=u'AVX '>, <RectH(341.96,967976.17,552.04,967986.94) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(341.82,967987.21,503.49,967997.98) text=u'values from high quadwords of xmm2 and '>, <RectH(51.12,967989.19,155.79,967999.96) text=u'VUNPCKHPD xmm1,xmm2, '>, <RectH(341.82,967998.19,393.27,968008.96) text=u'xmm3/m128. '>, <RectH(51.12,968000.17,100.90,968010.94) text=u'xmm3/m128 '>, <RectH(51.12,968024.17,163.35,968034.94) text=u'VEX.NDS.256.66.0F.WIG 15 /r '>, <RectH(205.80,968024.17,223.24,968034.94) text=u'RVM '>, <RectH(236.28,968024.17,250.74,968034.94) text=u'V/V '>, <RectH(285.02,968024.17,301.48,968034.94) text=u'AVX '>, <RectH(341.96,968024.17,552.04,968034.94) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(341.82,968035.21,503.43,968045.98) text=u'values from high quadwords of ymm2 and '>, <RectH(51.12,968037.19,155.55,968047.96) text=u'VUNPCKHPD ymm1,ymm2, '>, <RectH(341.82,968046.19,393.13,968056.96) text=u'ymm3/m256. '>, <RectH(51.12,968048.17,100.77,968058.94) text=u'ymm3/m256 '>, <RectH(51.12,968072.17,165.96,968082.94) text=u'EVEX.NDS.128.66.0F.W1 15 /r '>, <RectV(205.77,968072.17,216.19,968082.94) text=u'FV '>, <RectH(236.25,968072.17,250.69,968082.94) text=u'V/V '>, <RectH(284.97,968072.17,327.30,968082.94) text=u'AVX512VL '>, <RectH(341.82,968072.17,551.84,968082.94) text=u'Unpacks and Interleaves double precision floating-point '>, <RectH(284.88,968083.21,321.82,968093.98) text=u'AVX512F '>, <RectH(341.82,968083.21,503.49,968093.98) text=u'values from high quadwords of xmm2 and '>, <RectH(51.12,968085.19,185.52,968095.96) text=u'VUNPCKHPD xmm1 {k1}{z}, xmm2, '>, <RectH(341.82,968094.19,523.42,968104.96) text=u'xmm3/m128/m64bcst subject to writemask k1. '>, <RectH(51.12,968096.23,137.29,968107.00) text=u'xmm3/m128/m64bcst '>, <RectH(51.12,968120.23,165.96,968131.00) text=u'EVEX.NDS.256.66.0F.W1 15 /r '>, <RectV(205.77,968120.23,216.19,968131.00) text=u'FV '>, <RectH(236.25,968120.23,250.69,968131.00) text=u'V/V '>, <RectH(284.97,968120.23,327.30,968131.00) text=u'AVX512VL '>, <RectH(341.82,968120.23,551.84,968131.00) text=u'Unpacks and Interleaves double precision floating-point '>, <RectH(284.88,968131.21,321.82,968141.98) text=u'AVX512F '>, <RectH(341.82,968131.21,503.43,968141.98) text=u'values from high quadwords of ymm2 and '>, <RectH(51.12,968133.19,185.30,968143.96) text=u'VUNPCKHPD ymm1 {k1}{z}, ymm2, '>, <RectH(341.82,968142.19,523.24,968152.96) text=u'ymm3/m256/m64bcst subject to writemask k1. '>, <RectH(51.12,968144.23,137.16,968155.00) text=u'ymm3/m256/m64bcst '>, <RectH(51.12,968168.24,165.96,968179.00) text=u'EVEX.NDS.512.66.0F.W1 15 /r '>, <RectV(205.77,968168.24,216.19,968179.00) text=u'FV '>, <RectH(236.25,968168.24,250.69,968179.00) text=u'V/V '>, <RectH(284.97,968168.24,321.92,968179.00) text=u'AVX512F '>, <RectH(341.92,968168.24,552.03,968179.00) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(341.82,968179.22,502.81,968189.98) text=u'values from high quadwords of zmm2 and '>, <RectH(51.12,968181.20,184.26,968191.96) text=u'VUNPCKHPD zmm1 {k1}{z}, zmm2, '>, <RectH(341.82,968190.20,522.78,968200.96) text=u'zmm3/m512/m64bcst subject to writemask k1. '>, <RectH(51.12,968192.24,136.71,968203.00) text=u'zmm3/m512/m64bcst '>]
Processing page 1228
Processing page 1229
Processing page 1230
Processing page 1231
Writing to html/UNPCKHPS.html
No matching column!
[51.1203, 194.4606, 224.4603, 273.18, 328.1403]
[<RectH(51.12,971074.04,84.68,971084.97) text=u'Opcode/'>, <RectH(194.46,971074.04,212.91,971084.97) text=u'Op /'>, <RectH(224.46,971074.04,252.20,971084.97) text=u'64/32 '>, <RectH(273.18,971074.04,300.09,971084.97) text=u'CPUID '>, <RectH(328.14,971074.04,373.81,971084.97) text=u'Description '>, <RectH(51.12,971084.00,95.08,971094.94) text=u'Instruction '>, <RectV(194.46,971084.00,204.61,971094.94) text=u'En '>, <RectH(224.46,971084.00,261.52,971094.94) text=u'bit Mode '>, <RectH(273.18,971084.00,306.81,971094.94) text=u'Feature '>, <RectH(224.46,971094.02,256.64,971104.95) text=u'Support '>, <RectH(273.18,971094.02,290.30,971104.95) text=u'Flag '>, <RectH(51.12,971107.21,82.47,971117.98) text=u'0F 15 /r '>, <RectH(197.47,971107.21,209.44,971117.98) text=u'RM '>, <RectH(224.47,971107.21,238.89,971117.98) text=u'V/V '>, <RectH(273.18,971107.21,287.45,971117.98) text=u'SSE '>, <RectH(328.14,971107.21,536.84,971117.98) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(328.14,971118.19,541.22,971128.96) text=u'values from high quadwords of xmm1 and xmm2/m128. '>, <RectH(51.12,971120.17,173.37,971130.94) text=u'UNPCKHPS xmm1, xmm2/m128 '>, <RectH(51.12,971144.17,151.19,971154.94) text=u'VEX.NDS.128.0F.WIG 15 /r '>, <RectH(194.91,971144.17,212.28,971154.94) text=u'RVM '>, <RectH(224.60,971144.17,239.06,971154.94) text=u'V/V '>, <RectH(273.34,971144.17,289.81,971154.94) text=u'AVX '>, <RectH(328.31,971144.17,537.00,971154.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(328.14,971155.21,541.22,971165.98) text=u'values from high quadwords of xmm2 and xmm3/m128. '>, <RectH(51.12,971157.19,157.23,971167.96) text=u'VUNPCKHPS xmm1, xmm2, '>, <RectH(51.12,971168.17,100.85,971178.94) text=u'xmm3/m128 '>, <RectH(51.12,971192.17,151.19,971202.94) text=u'VEX.NDS.256.0F.WIG 15 /r '>, <RectH(194.61,971192.17,212.05,971202.94) text=u'RVM '>, <RectH(224.61,971192.17,239.07,971202.94) text=u'V/V '>, <RectH(273.35,971192.17,289.81,971202.94) text=u'AVX '>, <RectH(328.31,971192.17,537.01,971202.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(328.14,971203.21,541.00,971213.98) text=u'values from high quadwords of ymm2 and ymm3/m256. '>, <RectH(51.12,971205.19,156.99,971215.96) text=u'VUNPCKHPS ymm1, ymm2, '>, <RectH(51.12,971216.17,100.77,971226.94) text=u'ymm3/m256 '>, <RectH(51.12,971240.17,153.71,971250.94) text=u'EVEX.NDS.128.0F.W0 15 /r '>, <RectV(194.55,971240.17,204.91,971250.94) text=u'FV '>, <RectH(224.55,971240.17,238.98,971250.94) text=u'V/V '>, <RectH(273.27,971240.17,315.60,971250.94) text=u'AVX512VL '>, <RectH(328.14,971240.17,536.82,971250.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(273.18,971251.21,310.12,971261.98) text=u'AVX512F '>, <RectH(328.14,971251.21,489.77,971261.98) text=u'values from high quadwords of xmm2 and '>, <RectH(51.12,971253.19,182.94,971263.96) text=u'VUNPCKHPS xmm1 {k1}{z}, xmm2, '>, <RectH(328.14,971262.19,553.06,971272.96) text=u'xmm3/m128/m32bcst and write result to xmm1 subject to '>, <RectH(51.12,971264.23,137.29,971275.00) text=u'xmm3/m128/m32bcst '>, <RectH(328.14,971273.23,381.50,971284.00) text=u'writemask k1. '>, <RectH(51.12,971288.23,153.71,971299.00) text=u'EVEX.NDS.256.0F.W0 15 /r '>, <RectV(194.55,971288.23,204.91,971299.00) text=u'FV '>, <RectH(224.55,971288.23,238.98,971299.00) text=u'V/V '>, <RectH(273.27,971288.23,315.60,971299.00) text=u'AVX512VL '>, <RectH(328.14,971288.23,536.82,971299.00) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(273.18,971299.21,310.12,971309.98) text=u'AVX512F '>, <RectH(328.14,971299.21,489.64,971309.98) text=u'values from high quadwords of ymm2 and '>, <RectH(51.12,971301.19,182.89,971311.96) text=u'VUNPCKHPS ymm1 {k1}{z}, ymm2, '>, <RectH(328.14,971310.19,553.25,971320.96) text=u'ymm3/m256/m32bcst and write result to ymm1 subject to '>, <RectH(51.12,971312.23,137.16,971323.00) text=u'ymm3/m256/m32bcst '>, <RectH(328.14,971321.23,381.50,971332.00) text=u'writemask k1. '>, <RectH(51.12,971336.23,153.71,971347.00) text=u'EVEX.NDS.512.0F.W0 15 /r '>, <RectV(194.55,971336.23,204.91,971347.00) text=u'FV '>, <RectH(224.55,971336.23,238.98,971347.00) text=u'V/V '>, <RectH(273.27,971336.23,310.22,971347.00) text=u'AVX512F '>, <RectH(328.24,971336.23,537.04,971347.00) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(328.14,971347.21,489.14,971357.98) text=u'values from high quadwords of zmm2 and '>, <RectH(51.12,971349.19,182.65,971359.96) text=u'VUNPCKHPS zmm1 {k1}{z}, zmm2, '>, <RectH(328.14,971358.19,552.97,971368.96) text=u'zmm3/m512/m32bcst and write result to zmm1 subject to '>, <RectH(51.12,971360.23,136.71,971371.00) text=u'zmm3/m512/m32bcst '>, <RectH(328.14,971369.23,381.50,971380.00) text=u'writemask k1. '>]
Processing page 1232
Processing page 1233
Processing page 1234
Processing page 1235
Writing to html/UNPCKLPD.html
No matching column!
[51.1203, 193.8, 223.6197, 272.3997, 330.2994]
[<RectH(51.12,974242.04,84.68,974252.98) text=u'Opcode/'>, <RectH(193.80,974242.04,212.20,974252.98) text=u'Op /'>, <RectH(223.62,974242.04,251.43,974252.98) text=u'64/32 '>, <RectH(272.40,974242.04,299.32,974252.98) text=u'CPUID '>, <RectH(330.30,974242.04,375.96,974252.98) text=u'Description '>, <RectH(51.12,974252.00,95.08,974262.94) text=u'Instruction '>, <RectV(193.80,974252.00,203.94,974262.94) text=u'En '>, <RectH(223.62,974252.00,260.71,974262.94) text=u'bit Mode '>, <RectH(272.40,974252.00,305.97,974262.94) text=u'Feature '>, <RectH(223.62,974262.02,255.75,974272.96) text=u'Support '>, <RectH(272.40,974262.02,289.43,974272.96) text=u'Flag '>, <RectH(51.12,974275.21,95.19,974285.98) text=u'66 0F 14 /r '>, <RectH(196.74,974275.21,208.78,974285.98) text=u'RM '>, <RectH(223.63,974275.21,238.13,974285.98) text=u'V/V '>, <RectH(272.41,974275.21,291.90,974285.98) text=u'SSE2 '>, <RectH(330.32,974275.21,542.42,974285.98) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(330.30,974286.19,540.66,974296.96) text=u'values from low quadwords of xmm1 and xmm2/m128. '>, <RectH(51.12,974288.17,172.68,974298.94) text=u'UNPCKLPD xmm1, xmm2/m128 '>, <RectH(51.12,974312.17,163.35,974322.94) text=u'VEX.NDS.128.66.0F.WIG 14 /r '>, <RectH(194.10,974312.17,211.54,974322.94) text=u'RVM '>, <RectH(223.74,974312.17,238.26,974322.94) text=u'V/V '>, <RectH(272.54,974312.17,288.94,974322.94) text=u'AVX '>, <RectH(330.44,974312.17,542.57,974322.94) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(330.30,974323.21,540.66,974333.98) text=u'values from low quadwords of xmm2 and xmm3/m128. '>, <RectH(51.12,974325.19,154.25,974335.96) text=u'VUNPCKLPD xmm1,xmm2, '>, <RectH(51.12,974336.17,100.90,974346.94) text=u'xmm3/m128 '>, <RectH(51.12,974360.17,163.35,974370.94) text=u'VEX.NDS.256.66.0F.WIG 14 /r '>, <RectH(193.92,974360.17,211.29,974370.94) text=u'RVM '>, <RectH(223.74,974360.17,238.26,974370.94) text=u'V/V '>, <RectH(272.54,974360.17,288.94,974370.94) text=u'AVX '>, <RectH(330.44,974360.17,542.57,974370.94) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(330.30,974371.21,540.50,974381.98) text=u'values from low quadwords of ymm2 and ymm3/m256. '>, <RectH(51.12,974373.19,154.11,974383.96) text=u'VUNPCKLPD ymm1,ymm2, '>, <RectH(51.12,974384.17,100.77,974394.94) text=u'ymm3/m256 '>, <RectH(51.12,974408.17,165.96,974418.94) text=u'EVEX.NDS.128.66.0F.W1 14 /r '>, <RectV(193.89,974408.17,204.25,974418.94) text=u'FV '>, <RectH(223.71,974408.17,238.22,974418.94) text=u'V/V '>, <RectH(272.50,974408.17,314.81,974418.94) text=u'AVX512VL '>, <RectH(330.30,974408.17,541.84,974418.94) text=u'Unpacks and Interleaves double precision floating-point '>, <RectH(272.40,974419.21,309.29,974429.98) text=u'AVX512F '>, <RectH(330.30,974419.21,489.34,974429.98) text=u'values from low quadwords of xmm2 and '>, <RectH(51.12,974421.19,182.38,974431.96) text=u'VUNPCKLPD xmm1 {k1}{z}, xmm2, '>, <RectH(330.30,974430.19,514.09,974440.96) text=u'xmm3/m128/m64bcst subject to write mask k1. '>, <RectH(51.12,974432.23,137.29,974443.00) text=u'xmm3/m128/m64bcst '>, <RectH(51.12,974456.23,165.96,974467.00) text=u'EVEX.NDS.256.66.0F.W1 14 /r '>, <RectV(193.89,974456.23,204.25,974467.00) text=u'FV '>, <RectH(223.71,974456.23,238.22,974467.00) text=u'V/V '>, <RectH(272.50,974456.23,314.81,974467.00) text=u'AVX512VL '>, <RectH(330.30,974456.23,541.84,974467.00) text=u'Unpacks and Interleaves double precision floating-point '>, <RectH(272.40,974467.21,309.29,974477.98) text=u'AVX512F '>, <RectH(330.30,974467.21,489.23,974477.98) text=u'values from low quadwords of ymm2 and '>, <RectH(51.12,974469.19,182.34,974479.96) text=u'VUNPCKLPD ymm1 {k1}{z}, ymm2, '>, <RectH(330.30,974478.19,513.98,974488.96) text=u'ymm3/m256/m64bcst subject to write mask k1. '>, <RectH(51.12,974480.23,137.16,974491.00) text=u'ymm3/m256/m64bcst '>, <RectH(51.12,974504.24,165.96,974515.00) text=u'EVEX.NDS.512.66.0F.W1 14 /r '>, <RectV(193.89,974504.24,204.25,974515.00) text=u'FV '>, <RectH(223.71,974504.24,238.22,974515.00) text=u'V/V '>, <RectH(272.50,974504.24,309.38,974515.00) text=u'AVX512F '>, <RectH(330.40,974504.24,542.61,974515.00) text=u'Unpacks and Interleaves double-precision floating-point '>, <RectH(330.30,974515.22,488.64,974525.98) text=u'values from low quadwords of zmm2 and '>, <RectH(51.12,974517.20,182.14,974527.96) text=u'VUNPCKLPD zmm1 {k1}{z}, zmm2, '>, <RectH(330.30,974526.20,513.46,974536.96) text=u'zmm3/m512/m64bcst subject to write mask k1. '>, <RectH(51.12,974528.24,136.71,974539.00) text=u'zmm3/m512/m64bcst '>]
Processing page 1236
Processing page 1237
Processing page 1238
Processing page 1239
Processing page 1240
Writing to html/UNPCKLPS.html
No matching column!
[51.1203, 193.8, 224.1003, 272.82, 330.7197]
[<RectH(51.12,977410.04,84.68,977420.97) text=u'Opcode/'>, <RectH(193.80,977410.04,212.43,977420.97) text=u'Op /'>, <RectH(224.10,977410.04,251.84,977420.97) text=u'64/32 '>, <RectH(272.82,977410.04,299.73,977420.97) text=u'CPUID '>, <RectH(330.72,977410.04,376.45,977420.97) text=u'Description '>, <RectH(51.12,977420.00,95.08,977430.94) text=u'Instruction '>, <RectV(193.80,977420.00,203.94,977430.94) text=u'En '>, <RectH(224.10,977420.00,261.16,977430.94) text=u'bit Mode '>, <RectH(272.82,977420.00,306.44,977430.94) text=u'Feature '>, <RectH(224.10,977430.02,256.28,977440.95) text=u'Support '>, <RectH(272.82,977430.02,289.94,977440.95) text=u'Flag '>, <RectH(51.12,977443.21,82.48,977453.98) text=u'0F 14 /r '>, <RectH(196.94,977443.21,208.97,977453.98) text=u'RM '>, <RectH(224.12,977443.21,238.55,977453.98) text=u'V/V '>, <RectH(272.83,977443.21,287.11,977453.98) text=u'SSE '>, <RectH(330.75,977443.21,539.45,977453.98) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(330.72,977454.19,541.14,977464.96) text=u'values from low quadwords of xmm1 and xmm2/m128. '>, <RectH(51.12,977456.17,171.86,977466.94) text=u'UNPCKLPS xmm1, xmm2/m128 '>, <RectH(51.12,977480.17,151.19,977490.94) text=u'VEX.NDS.128.0F.WIG 14 /r '>, <RectH(194.36,977480.17,211.80,977490.94) text=u'RVM '>, <RectH(224.25,977480.17,238.71,977490.94) text=u'V/V '>, <RectH(272.99,977480.17,289.45,977490.94) text=u'AVX '>, <RectH(330.90,977480.17,539.61,977490.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(330.72,977491.21,541.14,977501.98) text=u'values from low quadwords of xmm2 and xmm3/m128. '>, <RectH(51.12,977493.19,153.63,977503.96) text=u'VUNPCKLPS xmm1,xmm2, '>, <RectH(51.12,977504.17,100.85,977514.94) text=u'xmm3/m128 '>, <RectH(51.12,977528.17,151.19,977538.94) text=u'VEX.NDS.256.0F.WIG 14 /r '>, <RectH(193.95,977528.17,211.33,977538.94) text=u'RVM '>, <RectH(224.25,977528.17,238.71,977538.94) text=u'V/V '>, <RectH(272.99,977528.17,289.45,977538.94) text=u'AVX '>, <RectH(330.90,977528.17,539.61,977538.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(330.72,977539.21,540.90,977549.98) text=u'values from low quadwords of ymm2 and ymm3/m256. '>, <RectH(51.12,977541.19,99.83,977551.96) text=u'VUNPCKLPS '>, <RectH(51.12,977552.17,152.04,977562.94) text=u'ymm1,ymm2,ymm3/m256 '>, <RectH(51.12,977576.17,153.71,977586.94) text=u'EVEX.NDS.128.0F.W0 14 /r '>, <RectV(193.89,977576.17,204.25,977586.94) text=u'FV '>, <RectH(224.19,977576.17,238.63,977586.94) text=u'V/V '>, <RectH(272.91,977576.17,315.25,977586.94) text=u'AVX512VL '>, <RectH(330.72,977576.17,539.52,977586.94) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(272.82,977587.21,309.77,977597.98) text=u'AVX512F '>, <RectH(330.72,977587.21,551.59,977597.98) text=u'values from low quadwords of xmm2 and xmm3/mem and '>, <RectH(51.12,977589.19,182.16,977599.96) text=u'VUNPCKLPS xmm1 {k1}{z}, xmm2, '>, <RectH(330.72,977598.19,509.02,977608.96) text=u'write result to xmm1 subject to write mask k1. '>, <RectH(51.12,977600.23,137.28,977611.00) text=u'xmm3/m128/m32bcst '>, <RectH(51.12,977624.23,153.71,977635.00) text=u'EVEX.NDS.256.0F.W0 14 /r '>, <RectV(193.89,977624.23,204.25,977635.00) text=u'FV '>, <RectH(224.19,977624.23,238.63,977635.00) text=u'V/V '>, <RectH(272.91,977624.23,315.25,977635.00) text=u'AVX512VL '>, <RectH(330.72,977624.23,539.52,977635.00) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(272.82,977635.21,309.77,977645.98) text=u'AVX512F '>, <RectH(330.72,977635.21,551.50,977645.98) text=u'values from low quadwords of ymm2 and ymm3/mem and '>, <RectH(51.12,977637.19,182.10,977647.96) text=u'VUNPCKLPS ymm1 {k1}{z}, ymm2, '>, <RectH(330.72,977646.19,508.91,977656.96) text=u'write result to ymm1 subject to write mask k1. '>, <RectH(51.12,977648.23,137.15,977659.00) text=u'ymm3/m256/m32bcst '>, <RectH(51.12,977672.23,153.71,977683.00) text=u'EVEX.NDS.512.0F.W0 14 /r '>, <RectV(193.89,977672.23,204.25,977683.00) text=u'FV '>, <RectH(224.19,977672.23,238.63,977683.00) text=u'V/V '>, <RectH(272.91,977672.23,309.86,977683.00) text=u'AVX512F '>, <RectH(330.82,977672.23,539.58,977683.00) text=u'Unpacks and Interleaves single-precision floating-point '>, <RectH(330.72,977683.21,489.15,977693.98) text=u'values from low quadwords of zmm2 and '>, <RectH(51.12,977685.19,181.86,977695.96) text=u'VUNPCKLPS zmm1 {k1}{z}, zmm2, '>, <RectH(330.72,977694.19,546.49,977704.96) text=u'zmm3/m512/m32bcst and write result to zmm1 subject '>, <RectH(51.12,977696.23,136.71,977707.00) text=u'zmm3/m512/m32bcst '>, <RectH(330.72,977705.23,396.58,977716.00) text=u'to write mask k1. '>]
Processing page 1241
Processing page 1242
Processing page 1243
Processing page 1244
Processing page 1245
Can't decode title
15.96 [<RectH(475.92,982936.71,557.92,982956.10) text=u'CHAPTER 5 '>, <RectH(308.22,982952.73,557.97,982972.12) text=u'INSTRUCTION SET REFERENCE, V-Z '>, <RectH(45.24,983003.37,69.31,983020.35) text=u'5.1 '>, <RectH(98.16,983003.37,322.12,983020.35) text=u'TERNARY BIT VECTOR LOGIC TABLE '>, <RectH(45.24,983024.72,558.45,983113.89) text=u'VPTERNLOGD/VPTERNLOGQ instructions operate on dword/qword elements and take three bit vectors of the respective input data elements to form a set of 32/64 indices, where each 3-bit value provides an index into an 8-bit lookup table represented by the imm8 byte of the instruction. The 256 possible values of the imm8 byte is constructed as a 16x16 boolean logic table. The 16 rows of the table uses the lower 4 bits of imm8 as row index. The 16 columns are referenced by imm8[7:4]. The 16 columns of the table are present in two halves, with 8 columns shown in Table 5-1 for the column index value between 0:7, followed by Table 5-2 showing the 8 columns corresponding to column index 8:15. This section presents the two-halves of the 256-entry table using a short-hand notation representing simple or compound boolean logic expressions with three input bit source data. '>]
[u'CHAPTER 5']
Processing page 1246
Can't decode title
13.98 [<RectH(45.12,985313.37,69.18,985330.35) text=u'5.2 '>, <RectH(97.96,985313.37,225.43,985330.35) text=u'INSTRUCTIONS (V-Z) '>, <RectH(45.12,985334.50,554.01,985380.87) text=u'Chapter 5 continues an alphabetical discussion of Intel\xae 64 and IA-32 instructions (V-Z). See also: Chapter 3, \u201cInstruction Set Reference, A-L,\u201d in the Intel\xae 64 and IA-32 Architectures Software Developer\u2019s Manual, Volume 2A, and Chapter 4, \u201cInstruction Set Reference, M-U\u201a\u201d in the Intel\xae 64 and IA-32 Architectures Software Devel-oper\u2019s Manual, Volume 2B. '>]
[u'5.2']
Processing page 1247
Processing page 1248
Processing page 1249
Writing to html/VALIGND_VALIGNQ.html
Processing page 1250
Processing page 1251
Writing to html/VBLENDMPD_VBLENDMPS.html
Processing page 1252
Processing page 1253
Processing page 1254
Processing page 1255
Processing page 1256
Processing page 1257
Processing page 1258
Writing to html/VBROADCAST.html
No matching column!
[45.12]
[<RectH(45.12,995386.69,272.17,995398.88) text=u'VEX-encoded instructions, see Exceptions Type 6; '>, <RectH(45.12,995400.73,279.58,995412.92) text=u'EVEX-encoded instructions, see Exceptions Type E6. '>, <RectH(45.12,995414.71,65.99,995426.90) text=u'#UD '>, <RectH(137.24,995414.71,389.45,995426.90) text=u'If VEX.L = 0 for VBROADCASTSD or VBROADCASTF128. '>, <RectH(136.92,995429.71,550.90,995441.96) text=u'If EVEX.L\u2019L = 0 for VBROADCASTSD/VBROADCASTF32X2/VBROADCASTF32X4/VBROADCASTF64X2. '>, <RectH(136.92,995444.71,399.16,995456.96) text=u'If EVEX.L\u2019L < 10b for VBROADCASTF32X8/VBROADCASTF64X4. '>]
No matching column!
[45.12]
[<RectH(45.12,995386.69,272.17,995398.88) text=u'VEX-encoded instructions, see Exceptions Type 6; '>, <RectH(45.12,995400.73,279.58,995412.92) text=u'EVEX-encoded instructions, see Exceptions Type E6. '>, <RectH(45.12,995414.71,65.99,995426.90) text=u'#UD '>, <RectH(137.24,995414.71,389.45,995426.90) text=u'If VEX.L = 0 for VBROADCASTSD or VBROADCASTF128. '>, <RectH(136.92,995429.71,550.90,995441.96) text=u'If EVEX.L\u2019L = 0 for VBROADCASTSD/VBROADCASTF32X2/VBROADCASTF32X4/VBROADCASTF64X2. '>, <RectH(136.92,995444.71,399.16,995456.96) text=u'If EVEX.L\u2019L < 10b for VBROADCASTF32X8/VBROADCASTF64X4. '>]
No matching column!
[45.12]
[<RectH(45.12,995386.69,272.17,995398.88) text=u'VEX-encoded instructions, see Exceptions Type 6; '>, <RectH(45.12,995400.73,279.58,995412.92) text=u'EVEX-encoded instructions, see Exceptions Type E6. '>, <RectH(45.12,995414.71,65.99,995426.90) text=u'#UD '>, <RectH(137.24,995414.71,389.45,995426.90) text=u'If VEX.L = 0 for VBROADCASTSD or VBROADCASTF128. '>, <RectH(136.92,995429.71,550.90,995441.96) text=u'If EVEX.L\u2019L = 0 for VBROADCASTSD/VBROADCASTF32X2/VBROADCASTF32X4/VBROADCASTF64X2. '>, <RectH(136.92,995444.71,399.16,995456.96) text=u'If EVEX.L\u2019L < 10b for VBROADCASTF32X8/VBROADCASTF64X4. '>]
Processing page 1259
Processing page 1260
Writing to html/VPBROADCASTM.html
Processing page 1261
Processing page 1262
Writing to html/VCOMPRESSPD.html
Processing page 1263
Processing page 1264
Writing to html/VCOMPRESSPS.html
Processing page 1265
Processing page 1266
Writing to html/VCVTPD2QQ.html
Processing page 1267
Processing page 1268
Writing to html/VCVTPD2UDQ.html
Processing page 1269
Processing page 1270
Writing to html/VCVTPD2UQQ.html
Processing page 1271
Processing page 1272
Processing page 1273
Writing to html/VCVTPH2PS.html
No matching column!
[46.02]
[<RectH(46.02,1007052.75,375.34,1007064.93) text=u'VEX-encoded instructions, see Exceptions Type 11 (do not report #AC); '>, <RectH(46.02,1007067.75,286.22,1007079.93) text=u'EVEX-encoded instructions, see Exceptions Type E11. '>, <RectH(46.02,1007081.73,66.89,1007093.91) text=u'#UD '>, <RectH(138.13,1007081.73,194.39,1007093.91) text=u'If VEX.W=1. '>, <RectH(46.02,1007095.70,66.89,1007107.89) text=u'#UD '>, <RectH(138.14,1007095.70,348.11,1007107.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
No matching column!
[46.02]
[<RectH(46.02,1007052.75,375.34,1007064.93) text=u'VEX-encoded instructions, see Exceptions Type 11 (do not report #AC); '>, <RectH(46.02,1007067.75,286.22,1007079.93) text=u'EVEX-encoded instructions, see Exceptions Type E11. '>, <RectH(46.02,1007081.73,66.89,1007093.91) text=u'#UD '>, <RectH(138.13,1007081.73,194.39,1007093.91) text=u'If VEX.W=1. '>, <RectH(46.02,1007095.70,66.89,1007107.89) text=u'#UD '>, <RectH(138.14,1007095.70,348.11,1007107.89) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 1274
Processing page 1275
Processing page 1276
Processing page 1277
Writing to html/VCVTPS2PH.html
No matching column!
[46.02]
[<RectH(46.02,1009880.72,371.54,1009892.91) text=u'VEX-encoded instructions, see Exceptions Type 11 (do not report #AC); '>, <RectH(46.02,1009895.72,286.22,1009907.91) text=u'EVEX-encoded instructions, see Exceptions Type E11. '>, <RectH(46.02,1009909.70,66.89,1009921.89) text=u'#UD '>, <RectH(138.13,1009909.70,194.39,1009921.89) text=u'If VEX.W=1. '>, <RectH(46.02,1009923.68,66.89,1009935.87) text=u'#UD '>, <RectH(138.14,1009923.68,348.11,1009935.87) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
No matching column!
[46.02]
[<RectH(46.02,1009880.72,371.54,1009892.91) text=u'VEX-encoded instructions, see Exceptions Type 11 (do not report #AC); '>, <RectH(46.02,1009895.72,286.22,1009907.91) text=u'EVEX-encoded instructions, see Exceptions Type E11. '>, <RectH(46.02,1009909.70,66.89,1009921.89) text=u'#UD '>, <RectH(138.13,1009909.70,194.39,1009921.89) text=u'If VEX.W=1. '>, <RectH(46.02,1009923.68,66.89,1009935.87) text=u'#UD '>, <RectH(138.14,1009923.68,348.11,1009935.87) text=u'If VEX.vvvv != 1111B or EVEX.vvvv != 1111B. '>]
Processing page 1278
Processing page 1279
Writing to html/VCVTPS2UDQ.html
Processing page 1280
Processing page 1281
Writing to html/VCVTPS2QQ.html
Processing page 1282
Processing page 1283
Writing to html/VCVTPS2UQQ.html
Processing page 1284
Processing page 1285
Writing to html/VCVTQQ2PD.html
Processing page 1286
Processing page 1287
Writing to html/VCVTQQ2PS.html
Processing page 1288
Processing page 1289
Writing to html/VCVTSD2USI.html
Processing page 1290
Processing page 1291
Writing to html/VCVTSS2USI.html
Processing page 1292
Processing page 1293
Writing to html/VCVTTPD2QQ.html
Processing page 1294
Processing page 1295
Writing to html/VCVTTPD2UDQ.html
Processing page 1296
Processing page 1297
Writing to html/VCVTTPD2UQQ.html
Processing page 1298
Processing page 1299
Writing to html/VCVTTPS2UDQ.html
Processing page 1300
Processing page 1301
Writing to html/VCVTTPS2QQ.html
Processing page 1302
Processing page 1303
Writing to html/VCVTTPS2UQQ.html
Processing page 1304
Writing to html/VCVTTSD2USI.html
Processing page 1305
Processing page 1306
Writing to html/VCVTTSS2USI.html
Processing page 1307
Processing page 1308
Writing to html/VCVTUDQ2PD.html
Processing page 1309
Processing page 1310
Writing to html/VCVTUDQ2PS.html
Processing page 1311
Processing page 1312
Writing to html/VCVTUQQ2PD.html
Processing page 1313
Processing page 1314
Writing to html/VCVTUQQ2PS.html
Processing page 1315
Processing page 1316
Writing to html/VCVTUSI2SD.html
Processing page 1317
Processing page 1318
Writing to html/VCVTUSI2SS.html
Processing page 1319
Processing page 1320
Processing page 1321
Writing to html/VDBPSADBW.html
No matching OpenTag for sup found!
[<OpenTag p >, u'0', u'0', u'B', u':', u' ', u'D', u'W', u'0', ' ']
No matching OpenTag for sup found!
[<OpenTag p >, u'0', u'0', u'B', u':', u' ', u'D', u'W', u'0', ' ', <CloseTag sup>, u'0', u'1', u'B', u':', u' ', u'D', u'W', u'1', ' ']
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
htmltext.py: line124
htmltext.py: line124
Processing page 1322
Processing page 1323
Writing to html/VEXPANDPD.html
Processing page 1324
Processing page 1325
Writing to html/VEXPANDPS.html
Processing page 1326
Processing page 1327
Writing to html/VERR_VERW.html
Processing page 1328
Processing page 1329
Writing to html/VEXP2PD.html
Processing page 1330
Processing page 1331
Writing to html/VEXP2PS.html
Processing page 1332
Processing page 1333
Processing page 1334
Processing page 1335
Processing page 1336
Processing page 1337
Writing to html/VEXTRACTF128_VEXTRACTF32x4_VEXTRACTF64x2_VEXTRACTF32x8_VEXTRACTF64x4.html
Processing page 1338
Processing page 1339
Processing page 1340
Processing page 1341
Processing page 1342
Processing page 1343
Writing to html/VEXTRACTI128_VEXTRACTI32x4_VEXTRACTI64x2_VEXTRACTI32x8_VEXTRACTI64x4.html
Processing page 1344
Processing page 1345
Processing page 1346
Processing page 1347
Writing to html/VFIXUPIMMPD.html
Processing page 1348
Processing page 1349
Processing page 1350
Processing page 1351
Writing to html/VFIXUPIMMPS.html
Processing page 1352
Processing page 1353
Processing page 1354
Writing to html/VFIXUPIMMSD.html
Processing page 1355
Processing page 1356
Processing page 1357
Writing to html/VFIXUPIMMSS.html
Processing page 1358
Processing page 1359
Processing page 1360
Processing page 1361
Processing page 1362
Processing page 1363
Processing page 1364
Writing to html/VFMADD132PD_VFMADD213PD_VFMADD231PD.html
Processing page 1365
Processing page 1366
Processing page 1367
Processing page 1368
Processing page 1369
Processing page 1370
Writing to html/VFMADD132PS_VFMADD213PS_VFMADD231PS.html
Processing page 1371
Processing page 1372
Processing page 1373
Writing to html/VFMADD132SD_VFMADD213SD_VFMADD231SD.html
Processing page 1374
Processing page 1375
Processing page 1376
Writing to html/VFMADD132SS_VFMADD213SS_VFMADD231SS.html
Processing page 1377
Processing page 1378
Processing page 1379
Processing page 1380
Processing page 1381
Processing page 1382
Processing page 1383
Writing to html/VFMADDSUB132PD_VFMADDSUB213PD_VFMADDSUB231PD.html
Processing page 1384
Processing page 1385
Processing page 1386
Processing page 1387
Processing page 1388
Processing page 1389
Processing page 1390
Writing to html/VFMADDSUB132PS_VFMADDSUB213PS_VFMADDSUB231PS.html
Processing page 1391
Processing page 1392
Processing page 1393
Processing page 1394
Processing page 1395
Processing page 1396
Processing page 1397
Writing to html/VFMSUBADD132PD_VFMSUBADD213PD_VFMSUBADD231PD.html
Processing page 1398
Processing page 1399
Processing page 1400
Processing page 1401
Processing page 1402
Processing page 1403
Processing page 1404
Writing to html/VFMSUBADD132PS_VFMSUBADD213PS_VFMSUBADD231PS.html
Processing page 1405
Processing page 1406
Processing page 1407
Processing page 1408
Processing page 1409
Processing page 1410
Writing to html/VFMSUB132PD_VFMSUB213PD_VFMSUB231PD.html
Processing page 1411
Processing page 1412
Processing page 1413
Processing page 1414
Processing page 1415
Processing page 1416
Writing to html/VFMSUB132PS_VFMSUB213PS_VFMSUB231PS.html
Processing page 1417
Processing page 1418
Processing page 1419
Writing to html/VFMSUB132SD_VFMSUB213SD_VFMSUB231SD.html
Processing page 1420
Processing page 1421
Processing page 1422
Writing to html/VFMSUB132SS_VFMSUB213SS_VFMSUB231SS.html
Processing page 1423
Processing page 1424
Processing page 1425
Processing page 1426
Processing page 1427
Processing page 1428
Processing page 1429
Writing to html/VFNMADD132PD_VFNMADD213PD_VFNMADD231PD.html
Processing page 1430
Processing page 1431
Processing page 1432
Processing page 1433
Processing page 1434
Processing page 1435
Writing to html/VFNMADD132PS_VFNMADD213PS_VFNMADD231PS.html
Processing page 1436
Processing page 1437
Processing page 1438
Writing to html/VFNMADD132SD_VFNMADD213SD_VFNMADD231SD.html
Processing page 1439
Processing page 1440
Processing page 1441
Writing to html/VFNMADD132SS_VFNMADD213SS_VFNMADD231SS.html
Processing page 1442
Processing page 1443
Processing page 1444
Processing page 1445
Processing page 1446
Processing page 1447
Writing to html/VFNMSUB132PD_VFNMSUB213PD_VFNMSUB231PD.html
Processing page 1448
Processing page 1449
Processing page 1450
Processing page 1451
Processing page 1452
Processing page 1453
Writing to html/VFNMSUB132PS_VFNMSUB213PS_VFNMSUB231PS.html
Processing page 1454
Processing page 1455
Processing page 1456
Writing to html/VFNMSUB132SD_VFNMSUB213SD_VFNMSUB231SD.html
Processing page 1457
Processing page 1458
Processing page 1459
Writing to html/VFNMSUB132SS_VFNMSUB213SS_VFNMSUB231SS.html
Processing page 1460
Processing page 1461
Processing page 1462
Writing to html/VFPCLASSPD.html
No matching column!
[51.1212, 182.4609, 210.9612, 258.3012, 314.5215]
[<RectH(51.12,1154818.04,84.68,1154828.97) text=u'Opcode/'>, <RectH(182.46,1154818.04,200.19,1154828.97) text=u'Op /'>, <RectH(210.96,1154818.04,238.77,1154828.97) text=u'64/32 '>, <RectH(258.30,1154818.04,285.22,1154828.97) text=u'CPUID '>, <RectH(314.52,1154818.04,360.24,1154828.97) text=u'Description '>, <RectH(51.12,1154828.00,95.08,1154838.93) text=u'Instruction '>, <RectV(182.46,1154828.00,192.61,1154838.93) text=u'En '>, <RectH(210.96,1154828.00,247.36,1154838.93) text=u'bit Mode '>, <RectH(258.30,1154828.00,291.94,1154838.93) text=u'Feature '>, <RectH(210.96,1154838.02,243.11,1154848.95) text=u'Support '>, <RectH(258.30,1154838.02,275.42,1154848.95) text=u'Flag '>, <RectH(51.12,1154851.21,168.27,1154861.97) text=u'EVEX.128.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154851.21,192.75,1154861.97) text=u'FV '>, <RectH(210.90,1154851.21,225.34,1154861.97) text=u'V/V '>, <RectH(258.24,1154851.21,300.52,1154861.97) text=u'AVX512VL '>, <RectH(314.42,1154851.21,480.69,1154861.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154851.21,532.02,1154861.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154862.19,543.29,1154872.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154864.17,134.84,1154874.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154864.17,301.78,1154874.93) text=u'AVX512DQ '>, <RectH(314.52,1154873.17,552.85,1154883.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154875.21,162.40,1154885.97) text=u'xmm2/m128/m64bcst, imm8 '>, <RectH(314.52,1154884.21,549.48,1154894.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154899.21,168.27,1154909.97) text=u'EVEX.256.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154899.21,192.75,1154909.97) text=u'FV '>, <RectH(210.90,1154899.21,225.34,1154909.97) text=u'V/V '>, <RectH(258.24,1154899.21,300.52,1154909.97) text=u'AVX512VL '>, <RectH(314.42,1154899.21,480.69,1154909.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154899.21,532.02,1154909.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154910.19,543.29,1154920.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154912.17,134.84,1154922.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154912.17,301.78,1154922.93) text=u'AVX512DQ '>, <RectH(314.52,1154921.17,552.85,1154931.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154923.21,162.29,1154933.97) text=u'ymm2/m256/m64bcst, imm8 '>, <RectH(314.52,1154932.21,549.48,1154942.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154947.21,168.27,1154957.97) text=u'EVEX.512.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154947.21,192.75,1154957.97) text=u'FV '>, <RectH(210.90,1154947.21,225.34,1154957.97) text=u'V/V '>, <RectH(258.24,1154947.21,301.73,1154957.97) text=u'AVX512DQ '>, <RectH(314.45,1154947.21,480.72,1154957.97) text=u'Tests the input for the following categories: '>, <RectH(482.99,1154947.21,532.05,1154957.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154958.19,543.29,1154968.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154960.17,134.84,1154970.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(314.52,1154969.17,552.85,1154979.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154971.21,161.84,1154981.97) text=u'zmm2/m512/m64bcst, imm8 '>, <RectH(314.52,1154980.21,549.48,1154990.97) text=u'masked test results are OR-ed together to form a mask result. '>]
No matching column!
[51.1212, 182.4609, 210.9612, 258.3012, 314.5215]
[<RectH(51.12,1154818.04,84.68,1154828.97) text=u'Opcode/'>, <RectH(182.46,1154818.04,200.19,1154828.97) text=u'Op /'>, <RectH(210.96,1154818.04,238.77,1154828.97) text=u'64/32 '>, <RectH(258.30,1154818.04,285.22,1154828.97) text=u'CPUID '>, <RectH(314.52,1154818.04,360.24,1154828.97) text=u'Description '>, <RectH(51.12,1154828.00,95.08,1154838.93) text=u'Instruction '>, <RectV(182.46,1154828.00,192.61,1154838.93) text=u'En '>, <RectH(210.96,1154828.00,247.36,1154838.93) text=u'bit Mode '>, <RectH(258.30,1154828.00,291.94,1154838.93) text=u'Feature '>, <RectH(210.96,1154838.02,243.11,1154848.95) text=u'Support '>, <RectH(258.30,1154838.02,275.42,1154848.95) text=u'Flag '>, <RectH(51.12,1154851.21,168.27,1154861.97) text=u'EVEX.128.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154851.21,192.75,1154861.97) text=u'FV '>, <RectH(210.90,1154851.21,225.34,1154861.97) text=u'V/V '>, <RectH(258.24,1154851.21,300.52,1154861.97) text=u'AVX512VL '>, <RectH(314.42,1154851.21,480.69,1154861.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154851.21,532.02,1154861.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154862.19,543.29,1154872.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154864.17,134.84,1154874.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154864.17,301.78,1154874.93) text=u'AVX512DQ '>, <RectH(314.52,1154873.17,552.85,1154883.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154875.21,162.40,1154885.97) text=u'xmm2/m128/m64bcst, imm8 '>, <RectH(314.52,1154884.21,549.48,1154894.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154899.21,168.27,1154909.97) text=u'EVEX.256.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154899.21,192.75,1154909.97) text=u'FV '>, <RectH(210.90,1154899.21,225.34,1154909.97) text=u'V/V '>, <RectH(258.24,1154899.21,300.52,1154909.97) text=u'AVX512VL '>, <RectH(314.42,1154899.21,480.69,1154909.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154899.21,532.02,1154909.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154910.19,543.29,1154920.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154912.17,134.84,1154922.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154912.17,301.78,1154922.93) text=u'AVX512DQ '>, <RectH(314.52,1154921.17,552.85,1154931.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154923.21,162.29,1154933.97) text=u'ymm2/m256/m64bcst, imm8 '>, <RectH(314.52,1154932.21,549.48,1154942.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154947.21,168.27,1154957.97) text=u'EVEX.512.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154947.21,192.75,1154957.97) text=u'FV '>, <RectH(210.90,1154947.21,225.34,1154957.97) text=u'V/V '>, <RectH(258.24,1154947.21,301.73,1154957.97) text=u'AVX512DQ '>, <RectH(314.45,1154947.21,480.72,1154957.97) text=u'Tests the input for the following categories: '>, <RectH(482.99,1154947.21,532.05,1154957.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154958.19,543.29,1154968.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154960.17,134.84,1154970.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(314.52,1154969.17,552.85,1154979.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154971.21,161.84,1154981.97) text=u'zmm2/m512/m64bcst, imm8 '>, <RectH(314.52,1154980.21,549.48,1154990.97) text=u'masked test results are OR-ed together to form a mask result. '>]
No matching column!
[51.1212, 182.4609, 210.9612, 258.3012, 314.5215]
[<RectH(51.12,1154818.04,84.68,1154828.97) text=u'Opcode/'>, <RectH(182.46,1154818.04,200.19,1154828.97) text=u'Op /'>, <RectH(210.96,1154818.04,238.77,1154828.97) text=u'64/32 '>, <RectH(258.30,1154818.04,285.22,1154828.97) text=u'CPUID '>, <RectH(314.52,1154818.04,360.24,1154828.97) text=u'Description '>, <RectH(51.12,1154828.00,95.08,1154838.93) text=u'Instruction '>, <RectV(182.46,1154828.00,192.61,1154838.93) text=u'En '>, <RectH(210.96,1154828.00,247.36,1154838.93) text=u'bit Mode '>, <RectH(258.30,1154828.00,291.94,1154838.93) text=u'Feature '>, <RectH(210.96,1154838.02,243.11,1154848.95) text=u'Support '>, <RectH(258.30,1154838.02,275.42,1154848.95) text=u'Flag '>, <RectH(51.12,1154851.21,168.27,1154861.97) text=u'EVEX.128.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154851.21,192.75,1154861.97) text=u'FV '>, <RectH(210.90,1154851.21,225.34,1154861.97) text=u'V/V '>, <RectH(258.24,1154851.21,300.52,1154861.97) text=u'AVX512VL '>, <RectH(314.42,1154851.21,480.69,1154861.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154851.21,532.02,1154861.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154862.19,543.29,1154872.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154864.17,134.84,1154874.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154864.17,301.78,1154874.93) text=u'AVX512DQ '>, <RectH(314.52,1154873.17,552.85,1154883.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154875.21,162.40,1154885.97) text=u'xmm2/m128/m64bcst, imm8 '>, <RectH(314.52,1154884.21,549.48,1154894.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154899.21,168.27,1154909.97) text=u'EVEX.256.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154899.21,192.75,1154909.97) text=u'FV '>, <RectH(210.90,1154899.21,225.34,1154909.97) text=u'V/V '>, <RectH(258.24,1154899.21,300.52,1154909.97) text=u'AVX512VL '>, <RectH(314.42,1154899.21,480.69,1154909.97) text=u'Tests the input for the following categories: '>, <RectH(482.96,1154899.21,532.02,1154909.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154910.19,543.29,1154920.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154912.17,134.84,1154922.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(258.30,1154912.17,301.78,1154922.93) text=u'AVX512DQ '>, <RectH(314.52,1154921.17,552.85,1154931.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154923.21,162.29,1154933.97) text=u'ymm2/m256/m64bcst, imm8 '>, <RectH(314.52,1154932.21,549.48,1154942.97) text=u'masked test results are OR-ed together to form a mask result. '>, <RectH(51.12,1154947.21,168.27,1154957.97) text=u'EVEX.512.66.0F3A.W1 66 /r ib '>, <RectV(182.39,1154947.21,192.75,1154957.97) text=u'FV '>, <RectH(210.90,1154947.21,225.34,1154957.97) text=u'V/V '>, <RectH(258.24,1154947.21,301.73,1154957.97) text=u'AVX512DQ '>, <RectH(314.45,1154947.21,480.72,1154957.97) text=u'Tests the input for the following categories: '>, <RectH(482.99,1154947.21,532.05,1154957.97) text=u' NaN, +0, -0, '>, <RectH(314.52,1154958.19,543.29,1154968.95) text=u'+Infinity, -Infinity, denormal, finite negative.  The immediate '>, <RectH(51.12,1154960.17,134.84,1154970.93) text=u'VFPCLASSPD k2 {k1}, '>, <RectH(314.52,1154969.17,552.85,1154979.93) text=u'field provides a mask bit for each of these category tests.  The '>, <RectH(51.12,1154971.21,161.84,1154981.97) text=u'zmm2/m512/m64bcst, imm8 '>, <RectH(314.52,1154980.21,549.48,1154990.97) text=u'masked test results are OR-ed together to form a mask result. '>]
Processing page 1463
Processing page 1464
Writing to html/VFPCLASSPS.html
Processing page 1465
Processing page 1466
Writing to html/VFPCLASSSD.html
Processing page 1467
Processing page 1468
Writing to html/VFPCLASSSS.html
Processing page 1469
Processing page 1470
Processing page 1471
Processing page 1472
Writing to html/VGATHERDPD_VGATHERQPD.html
Processing page 1473
Processing page 1474
Processing page 1475
Processing page 1476
Writing to html/VGATHERDPS_VGATHERQPS.html
Processing page 1477
Processing page 1478
Processing page 1479
Writing to html/VGATHERDPS_VGATHERDPD.html
Processing page 1480
Processing page 1481
Writing to html/VGATHERPF0DPS_VGATHERPF0QPS_VGATHERPF0DPD_VGATHERPF0QPD.html
Processing page 1482
Processing page 1483
Writing to html/VGATHERPF1DPS_VGATHERPF1QPS_VGATHERPF1DPD_VGATHERPF1QPD.html
Processing page 1484
Processing page 1485
Processing page 1486
Writing to html/VGATHERQPS_VGATHERQPD.html
Processing page 1487
Processing page 1488
Processing page 1489
Processing page 1490
Writing to html/VPGATHERDD_VPGATHERQD.html
Processing page 1491
Processing page 1492
Processing page 1493
Writing to html/VPGATHERDD_VPGATHERDQ.html
Processing page 1494
Processing page 1495
Processing page 1496
Processing page 1497
Writing to html/VPGATHERDQ_VPGATHERQQ.html
Processing page 1498
Processing page 1499
Processing page 1500
Writing to html/VPGATHERQD_VPGATHERQQ.html
Processing page 1501
Processing page 1502
Processing page 1503
Writing to html/VGETEXPPD.html
Processing page 1504
Processing page 1505
Processing page 1506
Processing page 1507
Writing to html/VGETEXPPS.html
Processing page 1508
Processing page 1509
Writing to html/VGETEXPSD.html
Processing page 1510
Processing page 1511
Writing to html/VGETEXPSS.html
Processing page 1512
Processing page 1513
Processing page 1514
Processing page 1515
Writing to html/VGETMANTPD.html
Processing page 1516
Processing page 1517
Processing page 1518
Writing to html/VGETMANTPS.html
Processing page 1519
Processing page 1520
Writing to html/VGETMANTSD.html
Processing page 1521
Processing page 1522
Writing to html/VGETMANTSS.html
Processing page 1523
Processing page 1524
Processing page 1525
Processing page 1526
Writing to html/VINSERTF128_VINSERTF32x4_VINSERTF64x2_VINSERTF32x8_VINSERTF64x4.html
Processing page 1527
Processing page 1528
Processing page 1529
Processing page 1530
Writing to html/VINSERTI128_VINSERTI32x4_VINSERTI64x2_VINSERTI32x8_VINSERTI64x4.html
Processing page 1531
Processing page 1532
Processing page 1533
Writing to html/VMASKMOV.html
Processing page 1534
Processing page 1535
Writing to html/VPBLENDD.html
Processing page 1536
Processing page 1537
Writing to html/VPBLENDMB_VPBLENDMW.html
Processing page 1538
Processing page 1539
Writing to html/VPBLENDMD_VPBLENDMQ.html
Processing page 1540
Processing page 1541
Processing page 1542
Writing to html/VPBROADCASTB_W_D_Q.html
Processing page 1543
Processing page 1544
Processing page 1545
Processing page 1546
Processing page 1547
Processing page 1548
Processing page 1549
Processing page 1550
Processing page 1551
Writing to html/VPBROADCAST.html
No matching column!
[46.02]
[<RectH(46.02,1227117.74,278.82,1227129.93) text=u'EVEX-encoded instructions, see Exceptions Type 6; '>, <RectH(46.02,1227131.72,422.63,1227143.91) text=u'EVEX-encoded instructions, syntax with reg/mem operand, see Exceptions Type E6. '>, <RectH(46.02,1227145.70,66.87,1227157.89) text=u'#UD '>, <RectH(138.12,1227145.70,384.89,1227157.89) text=u'If VEX.L = 0 for VPBROADCASTQ, VPBROADCASTI128. '>, <RectH(137.82,1227160.70,383.74,1227172.95) text=u'If EVEX.L\u2019L = 0 for VBROADCASTI32X4/VBROADCASTI64X2. '>, <RectH(137.82,1227175.70,395.08,1227187.95) text=u'If EVEX.L\u2019L < 10b for VBROADCASTI32X8/VBROADCASTI64X4. '>]
No matching column!
[46.02]
[<RectH(46.02,1227117.74,278.82,1227129.93) text=u'EVEX-encoded instructions, see Exceptions Type 6; '>, <RectH(46.02,1227131.72,422.63,1227143.91) text=u'EVEX-encoded instructions, syntax with reg/mem operand, see Exceptions Type E6. '>, <RectH(46.02,1227145.70,66.87,1227157.89) text=u'#UD '>, <RectH(138.12,1227145.70,384.89,1227157.89) text=u'If VEX.L = 0 for VPBROADCASTQ, VPBROADCASTI128. '>, <RectH(137.82,1227160.70,383.74,1227172.95) text=u'If EVEX.L\u2019L = 0 for VBROADCASTI32X4/VBROADCASTI64X2. '>, <RectH(137.82,1227175.70,395.08,1227187.95) text=u'If EVEX.L\u2019L < 10b for VBROADCASTI32X8/VBROADCASTI64X4. '>]
No matching column!
[46.02]
[<RectH(46.02,1227117.74,278.82,1227129.93) text=u'EVEX-encoded instructions, see Exceptions Type 6; '>, <RectH(46.02,1227131.72,422.63,1227143.91) text=u'EVEX-encoded instructions, syntax with reg/mem operand, see Exceptions Type E6. '>, <RectH(46.02,1227145.70,66.87,1227157.89) text=u'#UD '>, <RectH(138.12,1227145.70,384.89,1227157.89) text=u'If VEX.L = 0 for VPBROADCASTQ, VPBROADCASTI128. '>, <RectH(137.82,1227160.70,383.74,1227172.95) text=u'If EVEX.L\u2019L = 0 for VBROADCASTI32X4/VBROADCASTI64X2. '>, <RectH(137.82,1227175.70,395.08,1227187.95) text=u'If EVEX.L\u2019L < 10b for VBROADCASTI32X8/VBROADCASTI64X4. '>]
Processing page 1552
Processing page 1553
Processing page 1554
Writing to html/VPCMPB_VPCMPUB.html
Processing page 1555
Processing page 1556
Processing page 1557
Writing to html/VPCMPD_VPCMPUD.html
Processing page 1558
Processing page 1559
Processing page 1560
Writing to html/VPCMPQ_VPCMPUQ.html
Processing page 1561
Processing page 1562
Processing page 1563
Writing to html/VPCMPW_VPCMPUW.html
Processing page 1564
Processing page 1565
Writing to html/VPCOMPRESSD.html
Processing page 1566
Processing page 1567
Writing to html/VPCOMPRESSQ.html
Processing page 1568
Processing page 1569
Processing page 1570
Writing to html/VPCONFLICTD_Q.html
Processing page 1571
Processing page 1572
Writing to html/VPERM2F128.html
Processing page 1573
Processing page 1574
Writing to html/VPERM2I128.html
Processing page 1575
Processing page 1576
Processing page 1577
Writing to html/VPERMD_VPERMW.html
Processing page 1578
Processing page 1579
Processing page 1580
Processing page 1581
Processing page 1582
Processing page 1583
Writing to html/VPERMI2W_D_Q_PS_PD.html
Processing page 1584
Processing page 1585
Processing page 1586
Processing page 1587
Processing page 1588
Writing to html/VPERMILPD.html
Processing page 1589
Processing page 1590
Processing page 1591
Processing page 1592
Processing page 1593
Writing to html/VPERMILPS.html
Processing page 1594
Processing page 1595
Processing page 1596
Writing to html/VPERMPD.html
Processing page 1597
Processing page 1598
Processing page 1599
Writing to html/VPERMPS.html
Processing page 1600
Processing page 1601
Processing page 1602
Writing to html/VPERMQ.html
Processing page 1603
Processing page 1604
Writing to html/VPEXPANDD.html
Processing page 1605
Processing page 1606
Writing to html/VPEXPANDQ.html
Processing page 1607
Processing page 1608
Processing page 1609
Writing to html/VPLZCNTD_Q.html
Processing page 1610
Processing page 1611
Processing page 1612
Writing to html/VPMASKMOV.html
Processing page 1613
Processing page 1614
Processing page 1615
Writing to html/VPMOVM2B_VPMOVM2W_VPMOVM2D_VPMOVM2Q.html
Processing page 1616
Processing page 1617
Processing page 1618
Writing to html/VPMOVB2M_VPMOVW2M_VPMOVD2M_VPMOVQ2M.html
Processing page 1619
Processing page 1620
Processing page 1621
Processing page 1622
Writing to html/VPMOVQB_VPMOVSQB_VPMOVUSQB.html
Processing page 1623
Processing page 1624
Processing page 1625
Processing page 1626
Writing to html/VPMOVQW_VPMOVSQW_VPMOVUSQW.html
Processing page 1627
Processing page 1628
Processing page 1629
Processing page 1630
Writing to html/VPMOVQD_VPMOVSQD_VPMOVUSQD.html
Processing page 1631
Processing page 1632
Processing page 1633
Processing page 1634
Writing to html/VPMOVDB_VPMOVSDB_VPMOVUSDB.html
Processing page 1635
Processing page 1636
Processing page 1637
Processing page 1638
Writing to html/VPMOVDW_VPMOVSDW_VPMOVUSDW.html
Processing page 1639
Processing page 1640
Processing page 1641
Processing page 1642
Writing to html/VPMOVWB_VPMOVSWB_VPMOVUSWB.html
Processing page 1643
Processing page 1644
Processing page 1645
Processing page 1646
Writing to html/PROLD_PROLVD_PROLQ_PROLVQ.html
Processing page 1647
Processing page 1648
Processing page 1649
Processing page 1650
Writing to html/PRORD_PRORVD_PRORQ_PRORVQ.html
Processing page 1651
Processing page 1652
Processing page 1653
Processing page 1654
Writing to html/VPSCATTERDD_VPSCATTERDQ_VPSCATTERQD_VPSCATTERQQ.html
Processing page 1655
Processing page 1656
Processing page 1657
Processing page 1658
Processing page 1659
Writing to html/VPSLLVW_VPSLLVD_VPSLLVQ.html
Processing page 1660
Processing page 1661
Processing page 1662
Processing page 1663
Processing page 1664
Writing to html/VPSRAVW_VPSRAVD_VPSRAVQ.html
Processing page 1665
Processing page 1666
Processing page 1667
Processing page 1668
Processing page 1669
Writing to html/VPSRLVW_VPSRLVD_VPSRLVQ.html
Processing page 1670
Processing page 1671
Processing page 1672
Writing to html/VPTERNLOGD_VPTERNLOGQ.html
Processing page 1673
Processing page 1674
Processing page 1675
Writing to html/VPTESTMB_VPTESTMW_VPTESTMD_VPTESTMQ.html
Processing page 1676
Processing page 1677
Processing page 1678
Writing to html/VPTESTNMB_W_D_Q.html
Processing page 1679
Processing page 1680
Processing page 1681
Processing page 1682
Writing to html/VRANGEPD.html
No matching OpenTag for sup found!
[<OpenTag p >, u'I', u'm', u'm', u'8', u'[', u'3', u':', u'2', u']', u' ', u'=', u' ', u'1', u'0', u'b', u' ', u':', u' ', u'S', u'e', u't', u' ', u's', u'i', u'g', u'n', u' ', u't', u'o', u' ', u'0', ' ']
autoclose mismatch
autoclose mismatch
autoclose mismatch
autoclose mismatch
htmltext.py: line124
Processing page 1683
Processing page 1684
Processing page 1685
Writing to html/VRANGEPS.html
Processing page 1686
Processing page 1687
Processing page 1688
Writing to html/VRANGESD.html
Processing page 1689
Processing page 1690
Processing page 1691
Writing to html/VRANGESS.html
Processing page 1692
Processing page 1693
Writing to html/VRCP14PD.html
No matching OpenTag for sup found!
[<OpenTag p >, u'1', u'4']
autoclose mismatch
autoclose mismatch
htmltext.py: line124
Processing page 1694
Processing page 1695
Writing to html/VRCP14SD.html
Processing page 1696
Processing page 1697
Writing to html/VRCP14PS.html
Processing page 1698
Processing page 1699
Writing to html/VRCP14SS.html
Processing page 1700
Processing page 1701
Writing to html/VRCP28PD.html
Processing page 1702
Processing page 1703
Writing to html/VRCP28SD.html
Processing page 1704
Processing page 1705
Writing to html/VRCP28PS.html
Processing page 1706
Processing page 1707
Writing to html/VRCP28SS.html
Processing page 1708
Processing page 1709
Processing page 1710
Writing to html/VREDUCEPD.html
Processing page 1711
Processing page 1712
Writing to html/VREDUCESD.html
Processing page 1713
Processing page 1714
Writing to html/VREDUCEPS.html
Processing page 1715
Processing page 1716
Writing to html/VREDUCESS.html
Processing page 1717
Processing page 1718
Processing page 1719
Writing to html/VRNDSCALEPD.html
Processing page 1720
Processing page 1721
Writing to html/VRNDSCALESD.html
Processing page 1722
Processing page 1723
Processing page 1724
Writing to html/VRNDSCALEPS.html
Processing page 1725
Processing page 1726
Writing to html/VRNDSCALESS.html
Processing page 1727
Processing page 1728
Writing to html/VRSQRT14PD.html
Processing page 1729
Processing page 1730
Writing to html/VRSQRT14SD.html
Processing page 1731
Processing page 1732
Writing to html/VRSQRT14PS.html
Processing page 1733
Processing page 1734
Writing to html/VRSQRT14SS.html
Processing page 1735
Processing page 1736
Writing to html/VRSQRT28PD.html
Processing page 1737
Processing page 1738
Writing to html/VRSQRT28SD.html
Processing page 1739
Processing page 1740
Writing to html/VRSQRT28PS.html
Processing page 1741
Processing page 1742
Writing to html/VRSQRT28SS.html
Processing page 1743
Processing page 1744
Processing page 1745
Writing to html/VSCALEFPD.html
Processing page 1746
Processing page 1747
Writing to html/VSCALEFSD.html
Processing page 1748
Processing page 1749
Writing to html/VSCALEFPS.html
Processing page 1750
Processing page 1751
Writing to html/VSCALEFSS.html
Processing page 1752
Processing page 1753
Processing page 1754
Processing page 1755
Writing to html/VSCATTERDPS_VSCATTERDPD_VSCATTERQPS_VSCATTERQPD.html
Processing page 1756
Processing page 1757
Writing to html/VSCATTERPF0DPS_VSCATTERPF0QPS_VSCATTERPF0DPD_VSCATTERPF0QPD.html
Processing page 1758
Processing page 1759
Writing to html/VSCATTERPF1DPS_VSCATTERPF1QPS_VSCATTERPF1DPD_VSCATTERPF1QPD.html
Processing page 1760
Processing page 1761
Processing page 1762
Processing page 1763
Processing page 1764
Writing to html/VSHUFF32x4_VSHUFF64x2_VSHUFI32x4_VSHUFI64x2.html
Processing page 1765
Processing page 1766
Processing page 1767
Writing to html/VTESTPD_VTESTPS.html
Processing page 1768
Processing page 1769
Writing to html/VZEROALL.html
Processing page 1770
Processing page 1771
Writing to html/VZEROUPPER.html
Processing page 1772
Writing to html/WAIT_FWAIT.html
Processing page 1773
Processing page 1774
Writing to html/WBINVD.html
Processing page 1775
Processing page 1776
Writing to html/WRFSBASE_WRGSBASE.html
Processing page 1777
Processing page 1778
Writing to html/WRMSR.html
Processing page 1779
Writing to html/WRPKRU.html
Processing page 1780
Processing page 1781
Processing page 1782
Writing to html/XACQUIRE_XRELEASE.html
Processing page 1783
Processing page 1784
Writing to html/XABORT.html
Processing page 1785
Processing page 1786
Writing to html/XADD.html
Processing page 1787
Processing page 1788
Processing page 1789
Writing to html/XBEGIN.html
Processing page 1790
Processing page 1791
Writing to html/XCHG.html
Processing page 1792
Processing page 1793
Writing to html/XEND.html
Processing page 1794
Processing page 1795
Writing to html/XGETBV.html
Processing page 1796
Processing page 1797
Writing to html/XLAT_XLATB.html
Processing page 1798
Processing page 1799
Writing to html/XOR.html
Processing page 1800
Processing page 1801
Processing page 1802
Writing to html/XORPD.html
No matching column!
[51.1203, 199.2, 229.62, 278.4, 335.3997]
[<RectH(51.12,1424098.04,84.68,1424108.98) text=u'Opcode/'>, <RectH(199.20,1424098.04,217.89,1424108.98) text=u'Op /'>, <RectH(229.62,1424098.04,257.41,1424108.98) text=u'64/32 '>, <RectH(278.40,1424098.04,305.31,1424108.98) text=u'CPUID '>, <RectH(335.40,1424098.04,381.06,1424108.98) text=u'Description '>, <RectH(51.12,1424108.00,95.08,1424118.94) text=u'Instruction '>, <RectV(199.20,1424108.00,209.34,1424118.94) text=u'En '>, <RectH(229.62,1424108.00,266.73,1424118.94) text=u'bit Mode '>, <RectH(278.40,1424108.00,312.04,1424118.94) text=u'Feature '>, <RectH(229.62,1424118.02,261.85,1424128.96) text=u'Support '>, <RectH(278.40,1424118.02,295.52,1424128.96) text=u'Flag '>, <RectH(51.12,1424131.21,92.27,1424141.98) text=u'66 0F 57/r '>, <RectH(202.46,1424131.21,214.48,1424141.98) text=u'RM '>, <RectH(229.68,1424131.21,244.19,1424141.98) text=u'V/V '>, <RectH(278.47,1424131.21,298.00,1424141.98) text=u'SSE2 '>, <RectH(335.46,1424131.21,519.98,1424141.98) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(335.40,1424142.19,549.89,1424152.96) text=u'precision floating-point values in xmm1 and xmm2/mem. '>, <RectH(51.12,1424144.17,158.13,1424154.94) text=u'XORPD xmm1, xmm2/m128 '>, <RectH(51.12,1424168.17,163.35,1424178.94) text=u'VEX.NDS.128.66.0F.WIG 57 /r '>, <RectH(199.86,1424168.17,217.23,1424178.94) text=u'RVM '>, <RectH(229.73,1424168.17,244.26,1424178.94) text=u'V/V '>, <RectH(278.53,1424168.17,294.94,1424178.94) text=u'AVX '>, <RectH(335.54,1424168.17,520.02,1424178.94) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(335.40,1424179.21,549.89,1424189.98) text=u'precision floating-point values in xmm2 and xmm3/mem. '>, <RectH(51.12,1424181.19,139.80,1424191.96) text=u'VXORPD xmm1,xmm2, '>, <RectH(51.12,1424192.17,100.90,1424202.94) text=u'xmm3/m128 '>, <RectH(51.12,1424216.17,163.35,1424226.94) text=u'VEX.NDS.256.66.0F.WIG 57 /r '>, <RectH(199.32,1424216.17,216.76,1424226.94) text=u'RVM '>, <RectH(229.74,1424216.17,244.26,1424226.94) text=u'V/V '>, <RectH(278.54,1424216.17,294.95,1424226.94) text=u'AVX '>, <RectH(335.54,1424216.17,520.03,1424226.94) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(335.40,1424227.21,549.63,1424237.98) text=u'precision floating-point values in ymm2 and ymm3/mem. '>, <RectH(51.12,1424229.19,141.82,1424239.96) text=u'VXORPD ymm1, ymm2, '>, <RectH(51.12,1424240.17,100.77,1424250.94) text=u'ymm3/m256 '>, <RectH(51.12,1424264.17,165.85,1424274.94) text=u'EVEX.NDS.128.66.0F.W1 57 /r '>, <RectV(199.19,1424264.17,209.60,1424274.94) text=u'FV '>, <RectH(229.60,1424264.17,244.10,1424274.94) text=u'V/V '>, <RectH(278.39,1424264.17,320.74,1424274.94) text=u'AVX512VL '>, <RectH(335.40,1424264.17,519.87,1424274.94) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(278.40,1424275.21,321.94,1424285.98) text=u'AVX512DQ '>, <RectH(335.40,1424275.21,502.58,1424285.98) text=u'precision floating-point values in xmm2 and '>, <RectH(51.12,1424277.19,169.57,1424287.96) text=u'VXORPD xmm1 {k1}{z}, xmm2, '>, <RectH(335.40,1424286.19,517.01,1424296.96) text=u'xmm3/m128/m64bcst subject to writemask k1. '>, <RectH(51.12,1424288.23,137.28,1424299.00) text=u'xmm3/m128/m64bcst '>, <RectH(51.12,1424312.23,165.85,1424323.00) text=u'EVEX.NDS.256.66.0F.W1 57 /r '>, <RectV(199.18,1424312.23,209.60,1424323.00) text=u'FV '>, <RectH(229.60,1424312.23,244.10,1424323.00) text=u'V/V '>, <RectH(278.38,1424312.23,320.74,1424323.00) text=u'AVX512VL '>, <RectH(335.40,1424312.23,519.87,1424323.00) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(278.40,1424323.21,321.94,1424333.98) text=u'AVX512DQ '>, <RectH(335.40,1424323.21,502.49,1424333.98) text=u'precision floating-point values in ymm2 and '>, <RectH(51.12,1424325.19,169.29,1424335.96) text=u'VXORPD ymm1 {k1}{z}, ymm2, '>, <RectH(335.40,1424334.19,516.87,1424344.96) text=u'ymm3/m256/m64bcst subject to writemask k1. '>, <RectH(51.12,1424336.23,137.15,1424347.00) text=u'ymm3/m256/m64bcst '>, <RectH(51.12,1424360.24,165.92,1424371.00) text=u'EVEX.NDS.512.66.0F.W1 57 /r '>, <RectV(199.25,1424360.24,209.67,1424371.00) text=u'FV '>, <RectH(229.68,1424360.24,244.18,1424371.00) text=u'V/V '>, <RectH(278.46,1424360.24,322.07,1424371.00) text=u'AVX512DQ '>, <RectH(335.52,1424360.24,520.02,1424371.00) text=u'Return the bitwise logical XOR of packed double-'>, <RectH(335.40,1424371.22,501.92,1424381.98) text=u'precision floating-point values in zmm2 and '>, <RectH(51.12,1424373.20,168.31,1424383.96) text=u'VXORPD zmm1 {k1}{z}, zmm2, '>, <RectH(335.40,1424382.20,516.34,1424392.96) text=u'zmm3/m512/m64bcst subject to writemask k1. '>, <RectH(51.12,1424384.24,136.71,1424395.00) text=u'zmm3/m512/m64bcst '>]
Processing page 1803
Processing page 1804
Processing page 1805
Writing to html/XORPS.html
Processing page 1806
Processing page 1807
Processing page 1808
Processing page 1809
Writing to html/XRSTOR.html
Processing page 1810
Processing page 1811
Processing page 1812
Processing page 1813
Writing to html/XRSTORS.html
Processing page 1814
Processing page 1815
Processing page 1816
Writing to html/XSAVE.html
Processing page 1817
Processing page 1818
Processing page 1819
Writing to html/XSAVEC.html
Processing page 1820
Processing page 1821
Processing page 1822
Writing to html/XSAVEOPT.html
Processing page 1823
Processing page 1824
Processing page 1825
Writing to html/XSAVES.html
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
No matching column!
[59.541599999999995]
[<RectH(59.54,1443716.35,556.19,1443727.11) text=u'If MXCSR does not have its initial value of 1F80H, XSAVES sets XSTATE_BV[1] to 1 as long as RFBM[1] = 1, regardless of the value '>, <RectH(59.52,1443727.33,110.94,1443738.09) text=u'of XINUSE[1]. '>, <RectH(137.82,1443881.72,550.35,1443893.91) text=u'exception (#AC) is enabled (and the CPL is 3), signaling of #AC is not guaranteed and may '>, <RectH(137.82,1443892.70,545.30,1443904.89) text=u'vary with implementation, as follows. In all implementations where #AC is not signaled, a '>, <RectH(137.82,1443903.68,549.80,1443915.87) text=u'general protection exception is signaled in its place. In addition, the width of the alignment '>, <RectH(137.82,1443914.72,558.03,1443926.91) text=u'check may also vary with implementation. For instance, for a given implementation, an align-'>, <RectH(137.82,1443925.70,558.12,1443937.89) text=u'ment check exception might be signaled for a 2-byte misalignment, whereas a general protec-'>, <RectH(137.82,1443936.68,496.98,1443948.87) text=u'tion exception might be signaled for all other misalignments (4-, 8-, or 16-byte '>, <RectH(137.82,1443947.72,210.71,1443959.91) text=u'misalignments). '>]
Processing page 1826
Processing page 1827
Writing to html/XSETBV.html
Writing to html/XTEST.html
Conversion result: 635/635
